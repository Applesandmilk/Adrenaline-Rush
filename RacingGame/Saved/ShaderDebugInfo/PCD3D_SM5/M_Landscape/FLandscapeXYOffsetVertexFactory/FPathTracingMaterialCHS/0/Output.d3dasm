; shader hash: fa0ca899ed74204c04e2ae276ac99913
;
; Buffer Definitions:
;
; cbuffer View
; {
;
;   struct View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:   64
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  128
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  192
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  256
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  320
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  384
;       row_major float4x4 View_ViewToClip;           ; Offset:  448
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  512
;       row_major float4x4 View_ClipToView;           ; Offset:  576
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  640
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  768
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  832
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  896
;       float3 View_ViewTilePosition;                 ; Offset:  960
;       float PrePadding_View_972;                    ; Offset:  972
;       float3 View_MatrixTilePosition;               ; Offset:  976
;       float PrePadding_View_988;                    ; Offset:  988
;       float3 View_ViewForward;                      ; Offset:  992
;       float PrePadding_View_1004;                   ; Offset: 1004
;       float3 View_ViewUp;                           ; Offset: 1008
;       float PrePadding_View_1020;                   ; Offset: 1020
;       float3 View_ViewRight;                        ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_HMDViewNoRollRight;               ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1072
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1088
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1136
;       float PrePadding_View_1148;                   ; Offset: 1148
;       float3 View_RelativePreViewTranslation;       ; Offset: 1152
;       float PrePadding_View_1164;                   ; Offset: 1164
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1168
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1232
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1360
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1424
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1488
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1552
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1616
;       float PrePadding_View_1628;                   ; Offset: 1628
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1632
;       float PrePadding_View_1644;                   ; Offset: 1644
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1648
;       float PrePadding_View_1660;                   ; Offset: 1660
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1664
;       float PrePadding_View_1676;                   ; Offset: 1676
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1680
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1744
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1808
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1872
;       float4 View_TemporalAAJitter;                 ; Offset: 1936
;       float4 View_GlobalClippingPlane;              ; Offset: 1952
;       float2 View_FieldOfViewWideAngles;            ; Offset: 1968
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 1976
;       float4 View_ViewRectMin;                      ; Offset: 1984
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2000
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2016
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2032
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2048
;       float4 View_ScreenToViewSpace;                ; Offset: 2064
;       int View_NumSceneColorMSAASamples;            ; Offset: 2080
;       float View_PreExposure;                       ; Offset: 2084
;       float View_OneOverPreExposure;                ; Offset: 2088
;       float PrePadding_View_2092;                   ; Offset: 2092
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2096
;       float4 View_SpecularOverrideParameter;        ; Offset: 2112
;       float4 View_NormalOverrideParameter;          ; Offset: 2128
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2144
;       float View_PrevFrameGameTime;                 ; Offset: 2152
;       float View_PrevFrameRealTime;                 ; Offset: 2156
;       float View_OutOfBoundsMask;                   ; Offset: 2160
;       float PrePadding_View_2164;                   ; Offset: 2164
;       float PrePadding_View_2168;                   ; Offset: 2168
;       float PrePadding_View_2172;                   ; Offset: 2172
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2176
;       float View_CullingSign;                       ; Offset: 2188
;       float View_NearPlane;                         ; Offset: 2192
;       float View_GameTime;                          ; Offset: 2196
;       float View_RealTime;                          ; Offset: 2200
;       float View_DeltaTime;                         ; Offset: 2204
;       float View_MaterialTextureMipBias;            ; Offset: 2208
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2212
;       uint View_Random;                             ; Offset: 2216
;       uint View_FrameNumber;                        ; Offset: 2220
;       uint View_StateFrameIndexMod8;                ; Offset: 2224
;       uint View_StateFrameIndex;                    ; Offset: 2228
;       uint View_DebugViewModeMask;                  ; Offset: 2232
;       float View_CameraCut;                         ; Offset: 2236
;       float View_UnlitViewmodeMask;                 ; Offset: 2240
;       float PrePadding_View_2244;                   ; Offset: 2244
;       float PrePadding_View_2248;                   ; Offset: 2248
;       float PrePadding_View_2252;                   ; Offset: 2252
;       float4 View_DirectionalLightColor;            ; Offset: 2256
;       float3 View_DirectionalLightDirection;        ; Offset: 2272
;       float PrePadding_View_2284;                   ; Offset: 2284
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2288
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2320
;       float4 View_TemporalAAParams;                 ; Offset: 2352
;       float4 View_CircleDOFParams;                  ; Offset: 2368
;       uint View_ForceDrawAllVelocities;             ; Offset: 2384
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2388
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2392
;       float View_DepthOfFieldScale;                 ; Offset: 2396
;       float View_DepthOfFieldFocalLength;           ; Offset: 2400
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2404
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2408
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2412
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2416
;       float View_GeneralPurposeTweak;               ; Offset: 2420
;       float View_GeneralPurposeTweak2;              ; Offset: 2424
;       float View_DemosaicVposOffset;                ; Offset: 2428
;       float View_DecalDepthBias;                    ; Offset: 2432
;       float PrePadding_View_2436;                   ; Offset: 2436
;       float PrePadding_View_2440;                   ; Offset: 2440
;       float PrePadding_View_2444;                   ; Offset: 2444
;       float3 View_IndirectLightingColorScale;       ; Offset: 2448
;       float PrePadding_View_2460;                   ; Offset: 2460
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2464
;       float PrePadding_View_2476;                   ; Offset: 2476
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2480
;       float PrePadding_View_2492;                   ; Offset: 2492
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2496
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2528
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2560
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2592
;       float4 View_AtmosphereLightDiscCosHalfApexAngle[2];; Offset: 2624
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2656
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2672
;       float PrePadding_View_2684;                   ; Offset: 2684
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2688
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2704
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2768
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2784
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2788
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2792
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2796
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2800
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2816
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2820
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2824
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2828
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2832
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2836
;       float PrePadding_View_2840;                   ; Offset: 2840
;       float PrePadding_View_2844;                   ; Offset: 2844
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2848
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2860
;       float View_RealTimeReflectionCapture;         ; Offset: 2864
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2868
;       float PrePadding_View_2872;                   ; Offset: 2872
;       float PrePadding_View_2876;                   ; Offset: 2876
;       float4 View_AmbientCubemapTint;               ; Offset: 2880
;       float View_AmbientCubemapIntensity;           ; Offset: 2896
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2900
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2904
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2908
;       float4 View_SkyLightColor;                    ; Offset: 2912
;       float4 View_MobileSkyIrradianceEnvironmentMap[7];; Offset: 2928
;       float View_MobilePreviewMode;                 ; Offset: 3040
;       float View_HMDEyePaddingOffset;               ; Offset: 3044
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3048
;       float View_ShowDecalsMask;                    ; Offset: 3052
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3056
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3060
;       float PrePadding_View_3064;                   ; Offset: 3064
;       float PrePadding_View_3068;                   ; Offset: 3068
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3072
;       int View_StereoPassIndex;                     ; Offset: 3084
;       float4 View_GlobalVolumeCenterAndExtent[6];   ; Offset: 3088
;       float4 View_GlobalVolumeWorldToUVAddAndMul[6];; Offset: 3184
;       float4 View_GlobalDistanceFieldMipWorldToUVScale[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipWorldToUVBias[6];; Offset: 3376
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3472
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3476
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3480
;       int PrePadding_View_3484;                     ; Offset: 3484
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3488
;       float PrePadding_View_3500;                   ; Offset: 3500
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3504
;       float View_GlobalVolumeDimension;             ; Offset: 3516
;       float View_GlobalVolumeTexelSize;             ; Offset: 3520
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3524
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3528
;       float View_FullyCoveredExpandSurfaceScale;    ; Offset: 3532
;       float View_UncoveredExpandSurfaceScale;       ; Offset: 3536
;       float View_UncoveredMinStepScale;             ; Offset: 3540
;       int2 View_CursorPosition;                     ; Offset: 3544
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3552
;       float PrePadding_View_3556;                   ; Offset: 3556
;       float PrePadding_View_3560;                   ; Offset: 3560
;       float PrePadding_View_3564;                   ; Offset: 3564
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3568
;       float PrePadding_View_3580;                   ; Offset: 3580
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3600
;       float View_VolumetricFogMaxDistance;          ; Offset: 3608
;       float PrePadding_View_3612;                   ; Offset: 3612
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3616
;       float PrePadding_View_3628;                   ; Offset: 3628
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3632
;       float PrePadding_View_3644;                   ; Offset: 3644
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3648
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3660
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3664
;       float View_StereoIPD;                         ; Offset: 3676
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3680
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3684
;       float PrePadding_View_3688;                   ; Offset: 3688
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3696
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3728
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3732
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3736
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3740
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3744
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3748
;       uint PrePadding_View_3752;                    ; Offset: 3752
;       uint PrePadding_View_3756;                    ; Offset: 3756
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3760
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3776
;       float PrePadding_View_3784;                   ; Offset: 3784
;       float PrePadding_View_3788;                   ; Offset: 3788
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3792
;       float View_OverrideLandscapeLOD;              ; Offset: 3808
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3812
;       float View_MinRoughness;                      ; Offset: 3816
;       float PrePadding_View_3820;                   ; Offset: 3820
;       float4 View_HairRenderInfo;                   ; Offset: 3824
;       uint View_EnableSkyLight;                     ; Offset: 3840
;       uint View_HairRenderInfoBits;                 ; Offset: 3844
;       uint View_HairComponents;                     ; Offset: 3848
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3852
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3856
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3872
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3888
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3900
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 3904
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 3908
;       int View_PhysicsFieldClipmapCount;            ; Offset: 3912
;       int View_PhysicsFieldTargetCount;             ; Offset: 3916
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 3920
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4432
;       uint View_GPUSceneViewId;                     ; Offset: 4436
;       uint PrePadding_View_4440;                    ; Offset: 4440
;       uint PrePadding_View_4444;                    ; Offset: 4444
;       uint PrePadding_View_4448;                    ; Offset: 4448
;       uint PrePadding_View_4452;                    ; Offset: 4452
;       uint PrePadding_View_4456;                    ; Offset: 4456
;       uint PrePadding_View_4460;                    ; Offset: 4460
;       uint PrePadding_View_4464;                    ; Offset: 4464
;       uint PrePadding_View_4468;                    ; Offset: 4468
;       uint PrePadding_View_4472;                    ; Offset: 4472
;       uint PrePadding_View_4476;                    ; Offset: 4476
;       uint PrePadding_View_4480;                    ; Offset: 4480
;       uint PrePadding_View_4484;                    ; Offset: 4484
;       uint PrePadding_View_4488;                    ; Offset: 4488
;       uint PrePadding_View_4492;                    ; Offset: 4492
;       uint PrePadding_View_4496;                    ; Offset: 4496
;       uint PrePadding_View_4500;                    ; Offset: 4500
;       uint PrePadding_View_4504;                    ; Offset: 4504
;       uint PrePadding_View_4508;                    ; Offset: 4508
;       uint PrePadding_View_4512;                    ; Offset: 4512
;       uint PrePadding_View_4516;                    ; Offset: 4516
;       uint PrePadding_View_4520;                    ; Offset: 4520
;       uint PrePadding_View_4524;                    ; Offset: 4524
;       uint PrePadding_View_4528;                    ; Offset: 4528
;       uint PrePadding_View_4532;                    ; Offset: 4532
;       uint PrePadding_View_4536;                    ; Offset: 4536
;       uint PrePadding_View_4540;                    ; Offset: 4540
;       uint PrePadding_View_4544;                    ; Offset: 4544
;       uint PrePadding_View_4548;                    ; Offset: 4548
;       uint PrePadding_View_4552;                    ; Offset: 4552
;       uint PrePadding_View_4556;                    ; Offset: 4556
;       uint PrePadding_View_4560;                    ; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint PrePadding_View_4568;                    ; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint PrePadding_View_4576;                    ; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint PrePadding_View_4584;                    ; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint PrePadding_View_4592;                    ; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint PrePadding_View_4600;                    ; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint PrePadding_View_4608;                    ; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint PrePadding_View_4616;                    ; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint PrePadding_View_4624;                    ; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint PrePadding_View_4632;                    ; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint PrePadding_View_4640;                    ; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint PrePadding_View_4648;                    ; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint PrePadding_View_4656;                    ; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint PrePadding_View_4664;                    ; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint PrePadding_View_4672;                    ; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint PrePadding_View_4680;                    ; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint PrePadding_View_4688;                    ; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint PrePadding_View_4696;                    ; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint PrePadding_View_4704;                    ; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint PrePadding_View_4712;                    ; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint PrePadding_View_4720;                    ; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint PrePadding_View_4728;                    ; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint PrePadding_View_4736;                    ; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint PrePadding_View_4744;                    ; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint PrePadding_View_4752;                    ; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint PrePadding_View_4760;                    ; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint PrePadding_View_4768;                    ; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint PrePadding_View_4776;                    ; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint PrePadding_View_4784;                    ; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint PrePadding_View_4792;                    ; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint PrePadding_View_4800;                    ; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint PrePadding_View_4808;                    ; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint PrePadding_View_4816;                    ; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint PrePadding_View_4824;                    ; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint PrePadding_View_4832;                    ; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint PrePadding_View_4840;                    ; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint PrePadding_View_4848;                    ; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint PrePadding_View_4856;                    ; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint PrePadding_View_4864;                    ; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint PrePadding_View_4872;                    ; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint PrePadding_View_4880;                    ; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint PrePadding_View_4888;                    ; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint PrePadding_View_4896;                    ; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint PrePadding_View_4904;                    ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint PrePadding_View_4912;                    ; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint PrePadding_View_4920;                    ; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint PrePadding_View_4928;                    ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint PrePadding_View_4936;                    ; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint PrePadding_View_4944;                    ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint View_bShadingEnergyConservation;         ; Offset: 4952
;       uint View_bShadingEnergyPreservation;         ; Offset: 4956
;   
;   } View;                                           ; Offset:    0 Size:  4960
;
; }
;
; cbuffer LandscapeMVF
; {
;
;   struct LandscapeMVF
;   {
;
;       int2 LandscapeMVF_SubXY;                      ; Offset:    0
;   
;   } LandscapeMVF;                                   ; Offset:    0 Size:     8
;
; }
;
; cbuffer LandscapeContinuousLODParameters
; {
;
;   struct LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;   
;   } LandscapeContinuousLODParameters;               ; Offset:    0 Size:    24
;
; }
;
; cbuffer LandscapeParameters
; {
;
;   struct LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       int PrePadding_LandscapeParameters_20;        ; Offset:   20
;       int PrePadding_LandscapeParameters_24;        ; Offset:   24
;       int PrePadding_LandscapeParameters_28;        ; Offset:   28
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   32
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   64
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   80
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:   96
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  112
;       float4 LandscapeParameters_BlendableLayerMask;; Offset:  128
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  144
;   
;   } LandscapeParameters;                            ; Offset:    0 Size:   208
;
; }
;
; cbuffer Material
; {
;
;   struct Material
;   {
;
;       float4 Material_PreshaderBuffer[11];          ; Offset:    0
;   
;   } Material;                                       ; Offset:    0 Size:   176
;
; }
;
; cbuffer HitGroupSystemRootConstants
; {
;
;   struct HitGroupSystemRootConstants
;   {
;
;       struct struct.FHitGroupSystemRootConstants
;       {
;
;           uint Config;                              ; Offset:    0
;           uint IndexBufferOffsetInBytes;            ; Offset:    4
;           uint UserData;                            ; Offset:    8
;           uint BaseInstanceIndex;                   ; Offset:   12
;       
;       } HitGroupSystemRootConstants;                ; Offset:    0
;
;   
;   } HitGroupSystemRootConstants;                    ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; View                              cbuffer      NA          NA     CB0            cb0     1
; LandscapeMVF                      cbuffer      NA          NA     CB1            cb1     1
; LandscapeContinuousLODParameters   cbuffer      NA          NA     CB2            cb2     1
; LandscapeParameters               cbuffer      NA          NA     CB3            cb3     1
; Material                          cbuffer      NA          NA     CB4            cb4     1
; HitGroupSystemRootConstants       cbuffer      NA          NA     CB5     cb0,space2     1
; View_MaterialTextureBilinearWrapedSampler   sampler      NA          NA      S0             s0     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S1             s1     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S2             s2     1
; LandscapeParameters_XYOffsetmapTextureSampler   sampler      NA          NA      S3             s3     1
; Material_Texture2D_0Sampler       sampler      NA          NA      S4             s4     1
; Material_Texture2D_1Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_2Sampler       sampler      NA          NA      S6             s6     1
; Material_Texture2D_3Sampler       sampler      NA          NA      S7             s7     1
; Material_Texture2D_4Sampler       sampler      NA          NA      S8             s8     1
; Material_Texture2D_5Sampler       sampler      NA          NA      S9             s9     1
; Material_Texture2D_7Sampler       sampler      NA          NA     S10            s10     1
; Material_Texture2D_8Sampler       sampler      NA          NA     S11            s11     1
; Material_Texture2D_9Sampler       sampler      NA          NA     S12            s12     1
; Material_Texture2D_10Sampler      sampler      NA          NA     S13            s13     1
; Material_Texture2D_12Sampler      sampler      NA          NA     S14            s14     1
; Material_Texture2D_13Sampler      sampler      NA          NA     S15            s15     1
; Material_Texture2D_14Sampler      sampler      NA          NA     S16            s16     1
; Material_Texture2D_15Sampler      sampler      NA          NA     S17            s17     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; View_LandscapeIndirection         texture     u32         buf      T2             t2     1
; View_LandscapePerComponentData    texture     f32         buf      T3             t3     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf      T4             t4     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d      T5             t5     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d      T6             t6     1
; LandscapeParameters_XYOffsetmapTexture   texture     f32          2d      T7             t7     1
; Material_Texture2D_0              texture     f32          2d      T8             t8     1
; Material_Texture2D_1              texture     f32          2d      T9             t9     1
; Material_Texture2D_2              texture     f32          2d     T10            t10     1
; Material_Texture2D_3              texture     f32          2d     T11            t11     1
; Material_Texture2D_4              texture     f32          2d     T12            t12     1
; Material_Texture2D_5              texture     f32          2d     T13            t13     1
; Material_Texture2D_6              texture     f32          2d     T14            t14     1
; Material_Texture2D_7              texture     f32          2d     T15            t15     1
; Material_Texture2D_8              texture     f32          2d     T16            t16     1
; Material_Texture2D_9              texture     f32          2d     T17            t17     1
; Material_Texture2D_10             texture     f32          2d     T18            t18     1
; Material_Texture2D_11             texture     f32          2d     T19            t19     1
; Material_Texture2D_12             texture     f32          2d     T20            t20     1
; Material_Texture2D_13             texture     f32          2d     T21            t21     1
; Material_Texture2D_14             texture     f32          2d     T22            t22     1
; Material_Texture2D_15             texture     f32          2d     T23            t23     1
; Material_Texture2D_16             texture     f32          2d     T24            t24     1
; HitGroupSystemIndexBuffer         texture    byte         r/o     T25      t0,space2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.SamplerState = type { i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%View = type { %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, %class.matrix.float.4.4, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [7 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, <2 x i32>, float, float, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%LandscapeMVF = type { <2 x i32> }
%LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32> }
%LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, %class.matrix.float.4.4 }
%Material = type { [11 x <4 x float>] }
%HitGroupSystemRootConstants = type { %struct.FHitGroupSystemRootConstants }
%struct.FHitGroupSystemRootConstants = type { i32, i32, i32, i32 }
%struct.FPackedPathTracingPayload = type { %struct.FMinimalPayload, i32, i32, [13 x i32] }
%struct.FMinimalPayload = type { float }
%struct.FDefaultAttributes = type { <2 x float> }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }

@"\01?View_MaterialTextureBilinearWrapedSampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %"class.StructuredBuffer<vector<float, 4> >", align 4
@"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %"class.StructuredBuffer<vector<float, 4> >", align 4
@"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" = external constant %"class.Buffer<unsigned int>", align 4
@"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" = external constant %"class.Buffer<float>", align 4
@"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" = external constant %"class.Buffer<float>", align 4
@"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_0Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_1Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" = external constant %struct.ByteAddressBuffer, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@View = external constant %View
@LandscapeMVF = external constant %LandscapeMVF
@LandscapeContinuousLODParameters = external constant %LandscapeContinuousLODParameters
@LandscapeParameters = external constant %LandscapeParameters
@Material = external constant %Material
@HitGroupSystemRootConstants = external constant %HitGroupSystemRootConstants
@NeighborOffset.i.i.i.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

; Function Attrs: nounwind
define void @"\01?PathTracingMaterialCHS@@YAXUFPackedPathTracingPayload@@UFDefaultAttributes@@@Z"(%struct.FPackedPathTracingPayload* noalias nocapture %PackedPayload, %struct.FDefaultAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A", align 4, !noalias !66
  %2 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A", align 4, !noalias !66
  %3 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A", align 4, !noalias !66
  %4 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", align 4, !noalias !66
  %5 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", align 4, !noalias !71
  %6 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", align 4, !noalias !71
  %7 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", align 4, !noalias !71
  %8 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", align 4, !noalias !71
  %9 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", align 4, !noalias !71
  %10 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", align 4, !noalias !71
  %11 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", align 4, !noalias !71
  %12 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", align 4, !noalias !71
  %13 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_1Sampler@@3USamplerState@@A", align 4, !noalias !71
  %14 = load %struct.SamplerState, %struct.SamplerState* @"\01?Material_Texture2D_0Sampler@@3USamplerState@@A", align 4, !noalias !71
  %15 = load %struct.SamplerState, %struct.SamplerState* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A", align 4, !noalias !73
  %16 = load %struct.SamplerState, %struct.SamplerState* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", align 4
  %17 = load %struct.SamplerState, %struct.SamplerState* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", align 4, !noalias !73
  %18 = load %struct.SamplerState, %struct.SamplerState* @"\01?View_MaterialTextureBilinearWrapedSampler@@3USamplerState@@A", align 4, !noalias !79
  %19 = load %struct.ByteAddressBuffer, %struct.ByteAddressBuffer* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", align 4, !noalias !82
  %20 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %21 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %22 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %23 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %24 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %25 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %26 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %27 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %28 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %29 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %30 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %31 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %32 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %33 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %34 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %35 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %36 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %37 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !73
  %38 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %39 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !73
  %40 = load %"class.Buffer<float>", %"class.Buffer<float>"* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", align 4, !noalias !73
  %41 = load %"class.Buffer<float>", %"class.Buffer<float>"* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", align 4, !noalias !73
  %42 = load %"class.Buffer<unsigned int>", %"class.Buffer<unsigned int>"* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", align 4, !noalias !73
  %43 = load %"class.StructuredBuffer<vector<float, 4> >", %"class.StructuredBuffer<vector<float, 4> >"* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !87
  %44 = load %"class.StructuredBuffer<vector<float, 4> >", %"class.StructuredBuffer<vector<float, 4> >"* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4
  %45 = load %HitGroupSystemRootConstants, %HitGroupSystemRootConstants* @HitGroupSystemRootConstants, align 4
  %46 = load %Material, %Material* @Material, align 4
  %47 = load %LandscapeParameters, %LandscapeParameters* @LandscapeParameters, align 4
  %48 = load %LandscapeContinuousLODParameters, %LandscapeContinuousLODParameters* @LandscapeContinuousLODParameters, align 4
  %49 = load %LandscapeMVF, %LandscapeMVF* @LandscapeMVF, align 4
  %50 = load %View, %View* @View, align 4
  %51 = alloca [3 x float], align 4
  %52 = alloca [3 x float], align 4
  %53 = alloca [3 x float], align 4
  %54 = alloca [3 x i32], align 4
  %55 = alloca [4 x float], align 4
  %56 = alloca [3 x float], align 4
  %57 = call %dx.types.Handle @dx.op.createHandleForLib.HitGroupSystemRootConstants(i32 160, %HitGroupSystemRootConstants %45)  ; CreateHandleForLib(Resource)
  %58 = call %dx.types.Handle @dx.op.createHandleForLib.Material(i32 160, %Material %46)  ; CreateHandleForLib(Resource)
  %59 = call %dx.types.Handle @dx.op.createHandleForLib.LandscapeParameters(i32 160, %LandscapeParameters %47)  ; CreateHandleForLib(Resource)
  %60 = call %dx.types.Handle @dx.op.createHandleForLib.LandscapeContinuousLODParameters(i32 160, %LandscapeContinuousLODParameters %48)  ; CreateHandleForLib(Resource)
  %61 = call %dx.types.Handle @dx.op.createHandleForLib.LandscapeMVF(i32 160, %LandscapeMVF %49)  ; CreateHandleForLib(Resource)
  %62 = call %dx.types.Handle @dx.op.createHandleForLib.View(i32 160, %View %50)  ; CreateHandleForLib(Resource)
  %63 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %64 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 0, i32 0
  store float %63, float* %64, align 4, !tbaa !92
  %65 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 60)  ; CBufferLoadLegacy(handle,regIndex)
  %66 = extractvalue %dx.types.CBufRet.f32 %65, 0
  %67 = extractvalue %dx.types.CBufRet.f32 %65, 1
  %68 = extractvalue %dx.types.CBufRet.f32 %65, 2
  %69 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 72)  ; CBufferLoadLegacy(handle,regIndex)
  %70 = extractvalue %dx.types.CBufRet.f32 %69, 0
  %71 = extractvalue %dx.types.CBufRet.f32 %69, 1
  %72 = extractvalue %dx.types.CBufRet.f32 %69, 2
  %73 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 133)  ; CBufferLoadLegacy(handle,regIndex)
  %74 = extractvalue %dx.types.CBufRet.f32 %73, 0
  %75 = extractvalue %dx.types.CBufRet.f32 %73, 2
  %76 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 134)  ; CBufferLoadLegacy(handle,regIndex)
  %77 = extractvalue %dx.types.CBufRet.f32 %76, 0
  %78 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 1
  %79 = load i32, i32* %78, align 4, !tbaa !96, !noalias !98
  %80 = and i32 %79, 65535
  %81 = lshr i32 %79, 16
  %82 = call float @dx.op.legacyF16ToF32(i32 131, i32 %81)  ; LegacyF16ToF32(value)
  %83 = fmul fast float %63, %82
  %84 = getelementptr inbounds %struct.FDefaultAttributes, %struct.FDefaultAttributes* %Attributes, i32 0, i32 0
  %85 = load <2 x float>, <2 x float>* %84, align 4, !noalias !101
  %86 = extractelement <2 x float> %85, i32 0
  %87 = fsub fast float 1.000000e+00, %86
  %88 = extractelement <2 x float> %85, i32 1
  %89 = fsub fast float %87, %88
  %90 = getelementptr inbounds [3 x float], [3 x float]* %56, i32 0, i32 0
  store float %89, float* %90, align 4
  %91 = getelementptr inbounds [3 x float], [3 x float]* %56, i32 0, i32 1
  store float %86, float* %91, align 4
  %92 = getelementptr inbounds [3 x float], [3 x float]* %56, i32 0, i32 2
  store float %88, float* %92, align 4
  br label %93

; <label>:93                                      ; preds = %428, %0
  %94 = phi float [ 0.000000e+00, %0 ], [ %670, %428 ]
  %95 = phi float [ 0.000000e+00, %0 ], [ %671, %428 ]
  %96 = phi float [ 0.000000e+00, %0 ], [ %672, %428 ]
  %97 = phi float [ 0.000000e+00, %0 ], [ %673, %428 ]
  %98 = phi float [ 0.000000e+00, %0 ], [ %664, %428 ]
  %99 = phi float [ 0.000000e+00, %0 ], [ %665, %428 ]
  %100 = phi i32 [ 0, %0 ], [ %677, %428 ]
  %101 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %102 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %59, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %103 = extractvalue %dx.types.CBufRet.i32 %102, 1
  %104 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %105 = extractvalue %dx.types.CBufRet.i32 %104, 3
  %106 = sub nsw i32 %103, %105
  %107 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.i32 %107, 0
  %109 = mul nsw i32 %106, %108
  %110 = extractvalue %dx.types.CBufRet.i32 %102, 0
  %111 = extractvalue %dx.types.CBufRet.i32 %104, 2
  %112 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %59, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %113 = extractvalue %dx.types.CBufRet.i32 %112, 0
  %114 = sitofp i32 %113 to float
  %115 = extractvalue %dx.types.CBufRet.i32 %104, 0
  %116 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Buffer<unsigned int>"(i32 160, %"class.Buffer<unsigned int>" %42)  ; CreateHandleForLib(Resource)
  %117 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %116, i32 %115, i32 undef)  ; BufferLoad(srv,index,wot)
  %118 = extractvalue %dx.types.ResRet.i32 %117, 0
  %119 = add i32 %109, %110
  %120 = sub i32 %119, %111
  %121 = add i32 %120, %118
  %122 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 238)  ; CBufferLoadLegacy(handle,regIndex)
  %123 = extractvalue %dx.types.CBufRet.f32 %122, 0
  %124 = fcmp fast oge float %123, 0.000000e+00
  %125 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Buffer<float>"(i32 160, %"class.Buffer<float>" %41)  ; CreateHandleForLib(Resource)
  %126 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %125, i32 %121, i32 undef)  ; BufferLoad(srv,index,wot)
  %127 = extractvalue %dx.types.ResRet.f32 %126, 0
  %128 = select i1 %124, float %123, float %127
  %129 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 238)  ; CBufferLoadLegacy(handle,regIndex)
  %130 = extractvalue %dx.types.CBufRet.i32 %129, 1
  %131 = sitofp i32 %130 to float
  %132 = fadd fast float %131, %128
  %133 = call float @dx.op.binary.f32(i32 36, float %132, float %114)  ; FMin(a,b)
  %134 = call float @dx.op.unary.f32(i32 27, float %133)  ; Round_ni(value)
  %135 = fptoui float %134 to i32
  %136 = extractvalue %dx.types.CBufRet.i32 %102, 2
  %137 = and i32 %135, 31
  %138 = ashr i32 %136, %137
  %139 = add nsw i32 %138, -1
  %140 = sitofp i32 %139 to float
  %141 = fadd fast float %140, 1.000000e+00
  %142 = fptoui float %141 to i32
  %143 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %57, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %144 = extractvalue %dx.types.CBufRet.i32 %143, 1
  %145 = extractvalue %dx.types.CBufRet.i32 %143, 0
  %146 = and i32 %145, 255
  %147 = mul i32 %101, 3
  %148 = icmp eq i32 %146, 0
  br i1 %148, label %149, label %152

; <label>:149                                     ; preds = %93
  %150 = add i32 %147, 1
  %151 = add i32 %147, 2
  br label %176

; <label>:152                                     ; preds = %93
  %153 = icmp eq i32 %146, 2
  %154 = call %dx.types.Handle @dx.op.createHandleForLib.struct.ByteAddressBuffer(i32 160, %struct.ByteAddressBuffer %19)  ; CreateHandleForLib(Resource)
  br i1 %153, label %155, label %169

; <label>:155                                     ; preds = %152
  %156 = mul i32 %101, 6
  %157 = add i32 %156, %144
  %158 = and i32 %157, -4
  %159 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %154, i32 %158, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %160 = extractvalue %dx.types.ResRet.i32 %159, 0
  %161 = extractvalue %dx.types.ResRet.i32 %159, 1
  %162 = icmp eq i32 %158, %157
  %163 = lshr i32 %160, 16
  %164 = and i32 %161, 65535
  br i1 %162, label %165, label %167

; <label>:165                                     ; preds = %155
  %166 = and i32 %160, 65535
  br label %176

; <label>:167                                     ; preds = %155
  %168 = lshr i32 %161, 16
  br label %176

; <label>:169                                     ; preds = %152
  %170 = mul i32 %146, %147
  %171 = add i32 %170, %144
  %172 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %154, i32 %171, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %173 = extractvalue %dx.types.ResRet.i32 %172, 0
  %174 = extractvalue %dx.types.ResRet.i32 %172, 1
  %175 = extractvalue %dx.types.ResRet.i32 %172, 2
  br label %176

; <label>:176                                     ; preds = %169, %167, %165, %149
  %177 = phi i32 [ %147, %149 ], [ %173, %169 ], [ %166, %165 ], [ %163, %167 ]
  %178 = phi i32 [ %150, %149 ], [ %174, %169 ], [ %163, %165 ], [ %164, %167 ]
  %179 = phi i32 [ %151, %149 ], [ %175, %169 ], [ %164, %165 ], [ %168, %167 ]
  %180 = getelementptr inbounds [3 x i32], [3 x i32]* %54, i32 0, i32 0
  store i32 %177, i32* %180, align 4
  %181 = getelementptr inbounds [3 x i32], [3 x i32]* %54, i32 0, i32 1
  store i32 %178, i32* %181, align 4
  %182 = getelementptr inbounds [3 x i32], [3 x i32]* %54, i32 0, i32 2
  store i32 %179, i32* %182, align 4
  %183 = getelementptr [3 x i32], [3 x i32]* %54, i32 0, i32 %100
  %184 = load i32, i32* %183, align 4, !tbaa !96, !noalias !102
  %185 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %186 = urem i32 %184, %142
  %187 = uitofp i32 %186 to float
  %188 = udiv i32 %184, %142
  %189 = uitofp i32 %188 to float
  %190 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %61, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %191 = extractvalue %dx.types.CBufRet.i32 %190, 0
  %192 = sitofp i32 %191 to float
  %193 = extractvalue %dx.types.CBufRet.i32 %190, 1
  %194 = sitofp i32 %193 to float
  %195 = and i32 %185, 2147483647
  %196 = mul i32 %195, 40
  %197 = call %dx.types.Handle @"dx.op.createHandleForLib.class.StructuredBuffer<vector<float, 4> >"(i32 160, %"class.StructuredBuffer<vector<float, 4> >" %44)  ; CreateHandleForLib(Resource)
  %198 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %196, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %199 = extractvalue %dx.types.ResRet.f32 %198, 1
  %200 = bitcast float %199 to i32
  %201 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 277)  ; CBufferLoadLegacy(handle,regIndex)
  %202 = extractvalue %dx.types.CBufRet.i32 %201, 0
  %203 = call %dx.types.Handle @"dx.op.createHandleForLib.class.StructuredBuffer<vector<float, 4> >"(i32 160, %"class.StructuredBuffer<vector<float, 4> >" %43)  ; CreateHandleForLib(Resource)
  %204 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %203, i32 %200, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %205 = extractvalue %dx.types.ResRet.f32 %204, 0
  %206 = bitcast float %205 to i32
  %207 = and i32 %206, 1048575
  %208 = icmp eq i32 %207, 1048575
  br i1 %208, label %317, label %209, !dx.controlflow.hints !103

; <label>:209                                     ; preds = %176
  %210 = mul nuw nsw i32 %207, 40
  %211 = or i32 %210, 1
  %212 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %211, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %213 = extractvalue %dx.types.ResRet.f32 %212, 0
  %214 = extractvalue %dx.types.ResRet.f32 %212, 1
  %215 = extractvalue %dx.types.ResRet.f32 %212, 2
  %216 = add i32 %202, %200
  %217 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %203, i32 %216, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %218 = extractvalue %dx.types.ResRet.f32 %217, 0
  %219 = extractvalue %dx.types.ResRet.f32 %217, 1
  %220 = extractvalue %dx.types.ResRet.f32 %217, 2
  %221 = extractvalue %dx.types.ResRet.f32 %217, 3
  %222 = bitcast float %218 to i32
  %223 = bitcast float %219 to i32
  %224 = bitcast float %220 to i32
  %225 = bitcast float %221 to i32
  %226 = shl i32 %202, 1
  %227 = add i32 %226, %200
  %228 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %203, i32 %227, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %229 = extractvalue %dx.types.ResRet.f32 %228, 0
  %230 = extractvalue %dx.types.ResRet.f32 %228, 1
  %231 = extractvalue %dx.types.ResRet.f32 %228, 2
  %232 = and i32 %222, 65535
  %233 = uitofp i32 %232 to float
  %234 = lshr i32 %222, 16
  %235 = uitofp i32 %234 to float
  %236 = and i32 %223, 32767
  %237 = uitofp i32 %236 to float
  %238 = fadd fast float %233, -3.276800e+04
  %239 = fadd fast float %235, -3.276800e+04
  %240 = fadd fast float %237, -1.638400e+04
  %241 = fmul fast float %240, 0x3F06A0F8E0000000
  %242 = and i32 %223, 32768
  %243 = icmp ne i32 %242, 0
  %244 = fadd fast float %238, %239
  %245 = fmul fast float %244, 0x3F00002000000000
  %246 = fsub fast float %238, %239
  %247 = fmul fast float %246, 0x3F00002000000000
  %248 = call float @dx.op.unary.f32(i32 6, float %245)  ; FAbs(value)
  %249 = call float @dx.op.unary.f32(i32 6, float %247)  ; FAbs(value)
  %250 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %248, float %249)  ; Dot2(ax,ay,bx,by)
  %251 = fsub fast float 2.000000e+00, %250
  %252 = call float @dx.op.dot3.f32(i32 55, float %245, float %247, float %251, float %245, float %247, float %251)  ; Dot3(ax,ay,az,bx,by,bz)
  %253 = call float @dx.op.unary.f32(i32 25, float %252)  ; Rsqrt(value)
  %254 = fmul fast float %253, %245
  %255 = fmul fast float %253, %247
  %256 = fmul fast float %253, %251
  %257 = fadd fast float %256, 1.000000e+00
  %258 = fdiv fast float 1.000000e+00, %257
  %259 = fmul fast float %255, %254
  %260 = fmul fast float %259, %258
  %261 = fsub fast float -0.000000e+00, %260
  %262 = fmul fast float %254, %254
  %263 = fmul fast float %262, %258
  %264 = fsub fast float 1.000000e+00, %263
  %265 = fmul fast float %255, %255
  %266 = fmul fast float %265, %258
  %267 = fsub fast float 1.000000e+00, %266
  %268 = fmul fast float %241, %241
  %269 = fsub fast float 1.000000e+00, %268
  %270 = call float @dx.op.unary.f32(i32 24, float %269)  ; Sqrt(value)
  %271 = select i1 %243, float %241, float %270
  %272 = select i1 %243, float %270, float %241
  %273 = fmul fast float %264, %271
  %274 = fmul fast float %271, %261
  %275 = fmul fast float %271, %254
  %276 = fmul fast float %272, %261
  %277 = fmul fast float %267, %272
  %278 = fmul fast float %255, %272
  %279 = fsub fast float -0.000000e+00, %278
  %280 = fadd fast float %273, %276
  %281 = fadd fast float %274, %277
  %282 = fsub fast float %279, %275
  %283 = fmul fast float %282, %255
  %284 = fmul fast float %281, %256
  %285 = fsub fast float %283, %284
  %286 = fmul fast float %280, %256
  %287 = fmul fast float %282, %254
  %288 = fsub fast float %286, %287
  %289 = fmul fast float %281, %254
  %290 = fmul fast float %280, %255
  %291 = fsub fast float %289, %290
  %292 = lshr i32 %225, 16
  %293 = shl i32 %292, 23
  %294 = add i32 %293, -125829120
  %295 = bitcast i32 %294 to float
  %296 = lshr i32 %224, 16
  %297 = and i32 %224, 65535
  %298 = and i32 %225, 65535
  %299 = uitofp i32 %297 to float
  %300 = uitofp i32 %296 to float
  %301 = uitofp i32 %298 to float
  %302 = fadd fast float %299, -3.276800e+04
  %303 = fadd fast float %300, -3.276800e+04
  %304 = fadd fast float %301, -3.276800e+04
  %305 = fmul fast float %295, %302
  %306 = fmul fast float %295, %303
  %307 = fmul fast float %295, %304
  %308 = fmul fast float %280, %305
  %309 = fmul fast float %281, %305
  %310 = fmul fast float %282, %305
  %311 = fmul fast float %285, %306
  %312 = fmul fast float %288, %306
  %313 = fmul fast float %291, %306
  %314 = fmul fast float %254, %307
  %315 = fmul fast float %255, %307
  %316 = fmul fast float %256, %307
  br label %317

; <label>:317                                     ; preds = %209, %176
  %318 = phi float [ 0.000000e+00, %176 ], [ %213, %209 ]
  %319 = phi float [ 0.000000e+00, %176 ], [ %214, %209 ]
  %320 = phi float [ 0.000000e+00, %176 ], [ %215, %209 ]
  %321 = phi float [ 0.000000e+00, %176 ], [ %308, %209 ]
  %322 = phi float [ 0.000000e+00, %176 ], [ %309, %209 ]
  %323 = phi float [ 0.000000e+00, %176 ], [ %310, %209 ]
  %324 = phi float [ 0.000000e+00, %176 ], [ %311, %209 ]
  %325 = phi float [ 0.000000e+00, %176 ], [ %312, %209 ]
  %326 = phi float [ 0.000000e+00, %176 ], [ %313, %209 ]
  %327 = phi float [ 0.000000e+00, %176 ], [ %314, %209 ]
  %328 = phi float [ 0.000000e+00, %176 ], [ %315, %209 ]
  %329 = phi float [ 0.000000e+00, %176 ], [ %316, %209 ]
  %330 = phi float [ 0.000000e+00, %176 ], [ %229, %209 ]
  %331 = phi float [ 0.000000e+00, %176 ], [ %230, %209 ]
  %332 = phi float [ 0.000000e+00, %176 ], [ %231, %209 ]
  %333 = sub nsw i32 %110, %111
  %334 = add nsw i32 %333, %109
  %335 = add i32 %118, %334
  %336 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %125, i32 %335, i32 undef)  ; BufferLoad(srv,index,wot)
  %337 = extractvalue %dx.types.ResRet.f32 %336, 0
  %338 = select i1 %124, float %123, float %337
  %339 = fadd fast float %131, %338
  %340 = call float @dx.op.binary.f32(i32 36, float %339, float %114)  ; FMin(a,b)
  %341 = call float @dx.op.unary.f32(i32 27, float %340)  ; Round_ni(value)
  %342 = fptoui float %341 to i32
  %343 = and i32 %342, 31
  %344 = ashr i32 %136, %343
  %345 = add nsw i32 %344, -1
  %346 = sitofp i32 %345 to float
  %347 = fdiv fast float 1.000000e+00, %346
  %348 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Buffer<float>"(i32 160, %"class.Buffer<float>" %40)  ; CreateHandleForLib(Resource)
  %349 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %348, i32 %334, i32 undef)  ; BufferLoad(srv,index,wot)
  %350 = fmul fast float %347, %187
  %351 = fmul fast float %347, %189
  %352 = fadd fast float %350, %192
  %353 = fadd fast float %351, %194
  %354 = extractvalue %dx.types.CBufRet.i32 %102, 3
  %355 = sitofp i32 %354 to float
  %356 = fdiv fast float %352, %355
  %357 = fdiv fast float %353, %355
  %358 = fsub fast float 1.000000e+00, %356
  %359 = fmul fast float %357, 2.000000e+00
  %360 = fmul fast float %358, 2.000000e+00
  %361 = fmul fast float %340, %359
  %362 = fmul fast float %340, %360
  %363 = fsub fast float 1.000000e+00, %359
  %364 = fsub fast float 1.000000e+00, %360
  br label %365

; <label>:365                                     ; preds = %423, %317
  %366 = phi i32 [ -1, %317 ], [ %427, %423 ]
  %367 = phi i32 [ 0, %317 ], [ %425, %423 ]
  %368 = phi i32 [ 0, %317 ], [ %421, %423 ]
  %369 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %59, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %370 = extractvalue %dx.types.CBufRet.i32 %369, 0
  %371 = extractvalue %dx.types.CBufRet.i32 %369, 1
  %372 = add i32 %370, %367
  %373 = add i32 %371, %366
  %374 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %375 = extractvalue %dx.types.CBufRet.i32 %374, 2
  %376 = extractvalue %dx.types.CBufRet.i32 %374, 3
  %377 = call i32 @dx.op.binary.i32(i32 37, i32 %375, i32 %372)  ; IMax(a,b)
  %378 = call i32 @dx.op.binary.i32(i32 37, i32 %376, i32 %373)  ; IMax(a,b)
  %379 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %380 = extractvalue %dx.types.CBufRet.i32 %379, 0
  %381 = extractvalue %dx.types.CBufRet.i32 %379, 1
  %382 = add i32 %375, -1
  %383 = add i32 %382, %380
  %384 = add i32 %376, -1
  %385 = add i32 %384, %381
  %386 = call i32 @dx.op.binary.i32(i32 38, i32 %383, i32 %377)  ; IMin(a,b)
  %387 = call i32 @dx.op.binary.i32(i32 38, i32 %385, i32 %378)  ; IMin(a,b)
  %388 = sub nsw i32 %387, %376
  %389 = mul nsw i32 %388, %380
  %390 = sub i32 %386, %375
  %391 = add nsw i32 %390, %389
  %392 = extractvalue %dx.types.CBufRet.i32 %374, 0
  %393 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Buffer<unsigned int>"(i32 160, %"class.Buffer<unsigned int>" %42)  ; CreateHandleForLib(Resource)
  %394 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %393, i32 %392, i32 undef)  ; BufferLoad(srv,index,wot)
  %395 = extractvalue %dx.types.ResRet.i32 %394, 0
  %396 = add i32 %391, %395
  %397 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 238)  ; CBufferLoadLegacy(handle,regIndex)
  %398 = extractvalue %dx.types.CBufRet.f32 %397, 0
  %399 = fcmp fast oge float %398, 0.000000e+00
  %400 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Buffer<float>"(i32 160, %"class.Buffer<float>" %41)  ; CreateHandleForLib(Resource)
  %401 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %400, i32 %396, i32 undef)  ; BufferLoad(srv,index,wot)
  %402 = extractvalue %dx.types.ResRet.f32 %401, 0
  %403 = select i1 %399, float %398, float %402
  %404 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %59, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %405 = extractvalue %dx.types.CBufRet.i32 %404, 0
  %406 = sitofp i32 %405 to float
  %407 = add i32 %395, %334
  %408 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %400, i32 %407, i32 undef)  ; BufferLoad(srv,index,wot)
  %409 = extractvalue %dx.types.ResRet.f32 %408, 0
  %410 = select i1 %399, float %398, float %409
  %411 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 238)  ; CBufferLoadLegacy(handle,regIndex)
  %412 = extractvalue %dx.types.CBufRet.i32 %411, 1
  %413 = sitofp i32 %412 to float
  %414 = fadd fast float %413, %410
  %415 = call float @dx.op.binary.f32(i32 36, float %414, float %406)  ; FMin(a,b)
  %416 = call float @dx.op.binary.f32(i32 35, float %403, float %415)  ; FMax(a,b)
  %417 = getelementptr inbounds [4 x float], [4 x float]* %55, i32 0, i32 %368
  %418 = fadd fast float %413, %416
  %419 = select i1 %399, float %398, float %418
  %420 = call float @dx.op.binary.f32(i32 36, float %419, float %406)  ; FMin(a,b)
  store float %420, float* %417, align 4, !tbaa !92, !noalias !73
  %421 = add nuw nsw i32 %368, 1
  %422 = icmp eq i32 %421, 4
  br i1 %422, label %428, label %423

; <label>:423                                     ; preds = %365
  %424 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %421
  %425 = load i32, i32* %424, align 4
  %426 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %421
  %427 = load i32, i32* %426, align 4
  br label %365

; <label>:428                                     ; preds = %365
  %429 = uitofp i32 %342 to float
  %430 = extractvalue %dx.types.ResRet.f32 %349, 0
  %431 = fsub fast float 1.000000e+00, %357
  %432 = fmul fast float %356, 2.000000e+00
  %433 = fmul fast float %431, 2.000000e+00
  %434 = fmul fast float %340, %432
  %435 = fmul fast float %340, %433
  %436 = fsub fast float 1.000000e+00, %432
  %437 = fsub fast float 1.000000e+00, %433
  %438 = getelementptr inbounds [4 x float], [4 x float]* %55, i32 0, i32 0
  %439 = load float, float* %438, align 4, !tbaa !92, !noalias !73
  %440 = getelementptr inbounds [4 x float], [4 x float]* %55, i32 0, i32 1
  %441 = load float, float* %440, align 4, !tbaa !92, !noalias !73
  %442 = getelementptr inbounds [4 x float], [4 x float]* %55, i32 0, i32 2
  %443 = load float, float* %442, align 4, !tbaa !92, !noalias !73
  %444 = getelementptr inbounds [4 x float], [4 x float]* %55, i32 0, i32 3
  %445 = load float, float* %444, align 4, !tbaa !92, !noalias !73
  %446 = fmul fast float %439, %363
  %447 = fmul fast float %441, %436
  %448 = fmul fast float %443, %364
  %449 = fmul fast float %445, %437
  %450 = fadd fast float %446, %361
  %451 = fadd fast float %447, %434
  %452 = fadd fast float %448, %362
  %453 = fadd fast float %449, %435
  %454 = fadd fast float %352, %353
  %455 = fdiv fast float %454, %355
  %456 = fcmp fast ogt float %455, 1.000000e+00
  %457 = fcmp fast olt float %356, %357
  %458 = select i1 %457, float %453, float %452
  %459 = select i1 %457, float %451, float %450
  %460 = select i1 %456, float %458, float %459
  %461 = call float @dx.op.unary.f32(i32 27, float %460)  ; Round_ni(value)
  %462 = fsub fast float %460, %461
  %463 = fsub fast float %461, %429
  %464 = fsub fast float -0.000000e+00, %463
  %465 = call float @dx.op.unary.f32(i32 21, float %464)  ; Exp(value)
  %466 = fmul fast float %465, %187
  %467 = fmul fast float %465, %189
  %468 = call float @dx.op.unary.f32(i32 27, float %466)  ; Round_ni(value)
  %469 = call float @dx.op.unary.f32(i32 27, float %467)  ; Round_ni(value)
  %470 = fsub fast float -0.000000e+00, %461
  %471 = call float @dx.op.unary.f32(i32 21, float %470)  ; Exp(value)
  %472 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %59, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %473 = extractvalue %dx.types.CBufRet.f32 %472, 0
  %474 = fmul fast float %473, %471
  %475 = fadd fast float %474, -1.000000e+00
  %476 = fmul fast float %471, 5.000000e-01
  %477 = fmul fast float %476, %473
  %478 = call float @dx.op.binary.f32(i32 35, float %477, float 2.000000e+00)  ; FMax(a,b)
  %479 = fadd fast float %478, -1.000000e+00
  %480 = extractvalue %dx.types.CBufRet.f32 %472, 1
  %481 = fmul fast float %480, %475
  %482 = fmul fast float %480, %479
  %483 = fdiv fast float %468, %481
  %484 = fdiv fast float %469, %481
  %485 = fmul fast float %468, 5.000000e-01
  %486 = fmul fast float %469, 5.000000e-01
  %487 = call float @dx.op.unary.f32(i32 27, float %485)  ; Round_ni(value)
  %488 = call float @dx.op.unary.f32(i32 27, float %486)  ; Round_ni(value)
  %489 = fdiv fast float %487, %482
  %490 = fdiv fast float %488, %482
  %491 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %59, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %492 = extractvalue %dx.types.CBufRet.f32 %491, 0
  %493 = extractvalue %dx.types.CBufRet.f32 %491, 1
  %494 = fmul fast float %492, %483
  %495 = fmul fast float %493, %484
  %496 = extractvalue %dx.types.CBufRet.f32 %491, 2
  %497 = extractvalue %dx.types.CBufRet.f32 %491, 3
  %498 = fadd fast float %494, %496
  %499 = fadd fast float %495, %497
  %500 = fmul fast float %492, 5.000000e-01
  %501 = fmul fast float %493, 5.000000e-01
  %502 = fadd fast float %498, %500
  %503 = fadd fast float %499, %501
  %504 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %59, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %505 = extractvalue %dx.types.CBufRet.f32 %504, 0
  %506 = extractvalue %dx.types.CBufRet.f32 %504, 1
  %507 = fmul fast float %505, %192
  %508 = fmul fast float %506, %194
  %509 = fadd fast float %502, %507
  %510 = fadd fast float %503, %508
  %511 = fsub fast float %461, %430
  %512 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %39)  ; CreateHandleForLib(Resource)
  %513 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %17)  ; CreateHandleForLib(Resource)
  %514 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %512, %dx.types.Handle %513, float %509, float %510, float undef, float undef, i32 0, i32 0, i32 undef, float %511)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %515 = extractvalue %dx.types.ResRet.f32 %514, 0
  %516 = extractvalue %dx.types.ResRet.f32 %514, 1
  %517 = fmul fast float %515, 6.528000e+04
  %518 = fmul fast float %516, 2.550000e+02
  %519 = fadd fast float %518, -3.276800e+04
  %520 = fadd fast float %519, %517
  %521 = fmul fast float %492, %489
  %522 = fmul fast float %493, %490
  %523 = fadd fast float %521, %496
  %524 = fadd fast float %522, %497
  %525 = fadd fast float %523, %500
  %526 = fadd fast float %524, %501
  %527 = fadd fast float %525, %507
  %528 = fadd fast float %526, %508
  %529 = fsub fast float 1.000000e+00, %430
  %530 = fadd fast float %529, %461
  %531 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %512, %dx.types.Handle %513, float %527, float %528, float undef, float undef, i32 0, i32 0, i32 undef, float %530)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %532 = extractvalue %dx.types.ResRet.f32 %531, 0
  %533 = extractvalue %dx.types.ResRet.f32 %531, 1
  %534 = fmul fast float %532, 6.528000e+04
  %535 = fmul fast float %533, 2.550000e+02
  %536 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %59, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %537 = extractvalue %dx.types.CBufRet.f32 %536, 0
  %538 = extractvalue %dx.types.CBufRet.f32 %536, 1
  %539 = fmul fast float %537, %483
  %540 = fmul fast float %538, %484
  %541 = extractvalue %dx.types.CBufRet.f32 %536, 2
  %542 = extractvalue %dx.types.CBufRet.f32 %536, 3
  %543 = fadd fast float %539, %541
  %544 = fadd fast float %540, %542
  %545 = extractvalue %dx.types.CBufRet.f32 %504, 2
  %546 = fmul fast float %545, %192
  %547 = fmul fast float %545, %194
  %548 = fadd fast float %543, %546
  %549 = fadd fast float %544, %547
  %550 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %37)  ; CreateHandleForLib(Resource)
  %551 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %15)  ; CreateHandleForLib(Resource)
  %552 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %550, %dx.types.Handle %551, float %548, float %549, float undef, float undef, i32 0, i32 0, i32 undef, float %461)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %553 = extractvalue %dx.types.ResRet.f32 %552, 0
  %554 = extractvalue %dx.types.ResRet.f32 %552, 1
  %555 = extractvalue %dx.types.ResRet.f32 %552, 2
  %556 = extractvalue %dx.types.ResRet.f32 %552, 3
  %557 = fmul fast float %537, %489
  %558 = fmul fast float %538, %490
  %559 = fadd fast float %557, %541
  %560 = fadd fast float %558, %542
  %561 = fadd fast float %559, %546
  %562 = fadd fast float %560, %547
  %563 = fadd fast float %461, 1.000000e+00
  %564 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %550, %dx.types.Handle %551, float %561, float %562, float undef, float undef, i32 0, i32 0, i32 undef, float %563)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %565 = extractvalue %dx.types.ResRet.f32 %564, 0
  %566 = extractvalue %dx.types.ResRet.f32 %564, 1
  %567 = extractvalue %dx.types.ResRet.f32 %564, 2
  %568 = extractvalue %dx.types.ResRet.f32 %564, 3
  %569 = fmul fast float %553, 6.528000e+04
  %570 = fmul fast float %554, 2.550000e+02
  %571 = fadd fast float %570, -3.276800e+04
  %572 = fadd fast float %571, %569
  %573 = fmul fast float %572, 3.906250e-03
  %574 = fmul fast float %555, 6.528000e+04
  %575 = fmul fast float %556, 2.550000e+02
  %576 = fadd fast float %575, -3.276800e+04
  %577 = fadd fast float %576, %574
  %578 = fmul fast float %577, 3.906250e-03
  %579 = fmul fast float %565, 6.528000e+04
  %580 = fmul fast float %566, 2.550000e+02
  %581 = fadd fast float %580, -3.276800e+04
  %582 = fadd fast float %581, %579
  %583 = fmul fast float %582, 3.906250e-03
  %584 = fmul fast float %567, 6.528000e+04
  %585 = fmul fast float %568, 2.550000e+02
  %586 = fadd fast float %585, -3.276800e+04
  %587 = fadd fast float %586, %584
  %588 = fmul fast float %587, 3.906250e-03
  %589 = fadd fast float %573, %483
  %590 = fadd fast float %578, %484
  %591 = fsub fast float %489, %589
  %592 = fadd fast float %591, %583
  %593 = fsub fast float %490, %590
  %594 = fadd fast float %593, %588
  %595 = fsub fast float -3.276800e+04, %520
  %596 = fadd fast float %595, %535
  %597 = fadd fast float %596, %534
  %598 = fmul fast float %592, %462
  %599 = fmul fast float %594, %462
  %600 = fmul fast float %597, %462
  %601 = fadd fast float %598, %589
  %602 = fadd fast float %599, %590
  %603 = fadd fast float %600, %520
  %604 = fmul fast float %603, 7.812500e-03
  %605 = extractvalue %dx.types.CBufRet.f32 %504, 3
  %606 = fmul fast float %605, %192
  %607 = fmul fast float %605, %194
  %608 = fadd fast float %601, %606
  %609 = fadd fast float %602, %607
  %610 = fmul fast float %608, %322
  %611 = fmul fast float %609, %324
  %612 = fmul fast float %609, %325
  %613 = fmul fast float %609, %326
  %614 = fmul fast float %604, %327
  %615 = fmul fast float %604, %328
  %616 = fmul fast float %604, %329
  %617 = fsub fast float %318, %66
  %618 = fsub fast float %319, %67
  %619 = fsub fast float %320, %68
  %620 = fmul fast float %617, 2.097152e+06
  %621 = fmul fast float %618, 2.097152e+06
  %622 = fmul fast float %619, 2.097152e+06
  %623 = fadd fast float %620, %70
  %624 = fadd fast float %623, %330
  %625 = fadd fast float %624, %614
  %626 = fadd fast float %625, %611
  %627 = fadd fast float %621, %71
  %628 = fadd fast float %627, %331
  %629 = fadd fast float %628, %615
  %630 = fadd fast float %629, %612
  %631 = fadd fast float %622, %72
  %632 = fadd fast float %631, %332
  %633 = fadd fast float %632, %616
  %634 = fadd fast float %633, %613
  %635 = extractvalue %dx.types.CBufRet.f32 %472, 2
  %636 = extractvalue %dx.types.CBufRet.f32 %472, 3
  %637 = fadd fast float %606, %635
  %638 = fadd fast float %607, %636
  %639 = fmul fast float %601, %537
  %640 = fadd fast float %546, %541
  %641 = fadd fast float %547, %542
  %642 = fmul fast float %601, %492
  %643 = fadd fast float %642, %496
  %644 = fadd fast float %643, %500
  %645 = fadd fast float %644, %507
  %646 = fmul fast float %608, %321
  %647 = fmul fast float %608, %323
  %648 = fadd fast float %626, %646
  %649 = fadd fast float %630, %610
  %650 = fadd fast float %634, %647
  %651 = fadd fast float %637, %601
  %652 = fadd fast float %638, %602
  %653 = fmul fast float %602, %538
  %654 = fadd fast float %640, %639
  %655 = fadd fast float %641, %653
  %656 = fmul fast float %602, %493
  %657 = fadd fast float %656, %497
  %658 = fadd fast float %657, %501
  %659 = fadd fast float %658, %508
  %660 = getelementptr [3 x float], [3 x float]* %56, i32 0, i32 %100
  %661 = load float, float* %660, align 4, !tbaa !92, !noalias !101
  %662 = fmul fast float %661, %651
  %663 = fmul fast float %661, %652
  %664 = fadd fast float %662, %98
  %665 = fadd fast float %663, %99
  %666 = fmul fast float %661, %654
  %667 = fmul fast float %661, %655
  %668 = fmul fast float %661, %645
  %669 = fmul fast float %661, %659
  %670 = fadd fast float %666, %94
  %671 = fadd fast float %667, %95
  %672 = fadd fast float %668, %96
  %673 = fadd fast float %669, %97
  %674 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 %100
  %675 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 %100
  %676 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 %100
  store float %648, float* %674, align 4
  store float %649, float* %675, align 4
  store float %650, float* %676, align 4
  %677 = add nuw nsw i32 %100, 1
  %678 = icmp eq i32 %677, 3
  br i1 %678, label %679, label %93

; <label>:679                                     ; preds = %428
  %680 = extractvalue %dx.types.CBufRet.f32 %73, 1
  %681 = extractvalue %dx.types.CBufRet.f32 %73, 3
  %682 = extractvalue %dx.types.CBufRet.f32 %76, 1
  %683 = call float @dx.op.legacyF16ToF32(i32 131, i32 %80)  ; LegacyF16ToF32(value)
  %684 = fadd fast float %83, %683
  %685 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 1
  %686 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 1
  %687 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 1
  %688 = load float, float* %685, align 4
  %689 = load float, float* %686, align 4
  %690 = load float, float* %687, align 4
  %691 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 0
  %692 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 0
  %693 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 0
  %694 = load float, float* %691, align 4
  %695 = load float, float* %692, align 4
  %696 = load float, float* %693, align 4
  %697 = fsub fast float %688, %694
  %698 = fsub fast float %689, %695
  %699 = fsub fast float %690, %696
  %700 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 2
  %701 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 2
  %702 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 2
  %703 = load float, float* %700, align 4
  %704 = load float, float* %701, align 4
  %705 = load float, float* %702, align 4
  %706 = fsub fast float %703, %694
  %707 = fsub fast float %704, %695
  %708 = fsub fast float %705, %696
  %709 = fmul fast float %707, %699
  %710 = fmul fast float %708, %698
  %711 = fsub fast float %709, %710
  %712 = fmul fast float %708, %697
  %713 = fmul fast float %706, %699
  %714 = fsub fast float %712, %713
  %715 = fmul fast float %706, %698
  %716 = fmul fast float %707, %697
  %717 = fsub fast float %715, %716
  %718 = call float @dx.op.dot3.f32(i32 55, float %711, float %714, float %717, float %711, float %714, float %717)  ; Dot3(ax,ay,az,bx,by,bz)
  %719 = call float @dx.op.unary.f32(i32 25, float %718)  ; Rsqrt(value)
  %720 = fmul fast float %711, %719
  %721 = fmul fast float %714, %719
  %722 = fmul fast float %717, %719
  %723 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %38)  ; CreateHandleForLib(Resource)
  %724 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %16)  ; CreateHandleForLib(Resource)
  %725 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %723, %dx.types.Handle %724, float %672, float %673, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %726 = extractvalue %dx.types.ResRet.f32 %725, 2
  %727 = extractvalue %dx.types.ResRet.f32 %725, 3
  %728 = fmul fast float %726, 2.000000e+00
  %729 = fmul fast float %727, 2.000000e+00
  %730 = fadd fast float %728, -1.000000e+00
  %731 = fadd fast float %729, -1.000000e+00
  %732 = call float @dx.op.dot2.f32(i32 54, float %730, float %731, float %730, float %731)  ; Dot2(ax,ay,bx,by)
  %733 = fsub fast float 1.000000e+00, %732
  %734 = call float @dx.op.binary.f32(i32 35, float %733, float 0.000000e+00)  ; FMax(a,b)
  %735 = call float @dx.op.unary.f32(i32 24, float %734)  ; Sqrt(value)
  %736 = fsub fast float -0.000000e+00, %730
  %737 = call float @dx.op.dot3.f32(i32 55, float %735, float 0.000000e+00, float %736, float %735, float 0.000000e+00, float %736)  ; Dot3(ax,ay,az,bx,by,bz)
  %738 = call float @dx.op.unary.f32(i32 25, float %737)  ; Rsqrt(value)
  %739 = fmul fast float %738, %735
  %740 = fmul fast float %738, %736
  %741 = fmul fast float %740, %731
  %742 = fmul fast float %739, %735
  %743 = fmul fast float %740, %730
  %744 = fsub fast float %742, %743
  %745 = fmul fast float %731, %739
  %746 = fsub fast float -0.000000e+00, %745
  %747 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %59, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %748 = extractvalue %dx.types.CBufRet.f32 %747, 0
  %749 = extractvalue %dx.types.CBufRet.f32 %747, 1
  %750 = extractvalue %dx.types.CBufRet.f32 %747, 2
  %751 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %59, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %752 = extractvalue %dx.types.CBufRet.f32 %751, 0
  %753 = extractvalue %dx.types.CBufRet.f32 %751, 1
  %754 = extractvalue %dx.types.CBufRet.f32 %751, 2
  %755 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %59, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %756 = extractvalue %dx.types.CBufRet.f32 %755, 0
  %757 = extractvalue %dx.types.CBufRet.f32 %755, 1
  %758 = extractvalue %dx.types.CBufRet.f32 %755, 2
  %759 = fmul fast float %748, %739
  %760 = call float @dx.op.tertiary.f32(i32 46, float %740, float %756, float %759)  ; FMad(a,b,c)
  %761 = fmul fast float %749, %739
  %762 = call float @dx.op.tertiary.f32(i32 46, float %740, float %757, float %761)  ; FMad(a,b,c)
  %763 = fmul fast float %750, %739
  %764 = call float @dx.op.tertiary.f32(i32 46, float %740, float %758, float %763)  ; FMad(a,b,c)
  %765 = fmul fast float %741, %748
  %766 = call float @dx.op.tertiary.f32(i32 46, float %744, float %752, float %765)  ; FMad(a,b,c)
  %767 = call float @dx.op.tertiary.f32(i32 46, float %746, float %756, float %766)  ; FMad(a,b,c)
  %768 = fmul fast float %741, %749
  %769 = call float @dx.op.tertiary.f32(i32 46, float %744, float %753, float %768)  ; FMad(a,b,c)
  %770 = call float @dx.op.tertiary.f32(i32 46, float %746, float %757, float %769)  ; FMad(a,b,c)
  %771 = fmul fast float %741, %750
  %772 = call float @dx.op.tertiary.f32(i32 46, float %744, float %754, float %771)  ; FMad(a,b,c)
  %773 = call float @dx.op.tertiary.f32(i32 46, float %746, float %758, float %772)  ; FMad(a,b,c)
  %774 = fmul fast float %748, %730
  %775 = call float @dx.op.tertiary.f32(i32 46, float %731, float %752, float %774)  ; FMad(a,b,c)
  %776 = call float @dx.op.tertiary.f32(i32 46, float %735, float %756, float %775)  ; FMad(a,b,c)
  %777 = fmul fast float %749, %730
  %778 = call float @dx.op.tertiary.f32(i32 46, float %731, float %753, float %777)  ; FMad(a,b,c)
  %779 = call float @dx.op.tertiary.f32(i32 46, float %735, float %757, float %778)  ; FMad(a,b,c)
  %780 = fmul fast float %750, %730
  %781 = call float @dx.op.tertiary.f32(i32 46, float %731, float %754, float %780)  ; FMad(a,b,c)
  %782 = call float @dx.op.tertiary.f32(i32 46, float %735, float %758, float %781)  ; FMad(a,b,c)
  %783 = call i32 @dx.op.hitKind.i32(i32 143)  ; HitKind()
  %784 = icmp eq i32 %783, 254
  %785 = select i1 %784, float 1.000000e+00, float -1.000000e+00
  %786 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %36)  ; CreateHandleForLib(Resource)
  %787 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %14)  ; CreateHandleForLib(Resource)
  %788 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %786, %dx.types.Handle %787, float %670, float %671, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %789 = extractvalue %dx.types.ResRet.f32 %788, 0
  %790 = extractvalue %dx.types.ResRet.f32 %788, 1
  %791 = extractvalue %dx.types.ResRet.f32 %788, 2
  %792 = extractvalue %dx.types.ResRet.f32 %788, 3
  %793 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %794 = extractvalue %dx.types.CBufRet.f32 %793, 0
  %795 = extractvalue %dx.types.CBufRet.f32 %793, 1
  %796 = extractvalue %dx.types.CBufRet.f32 %793, 2
  %797 = extractvalue %dx.types.CBufRet.f32 %793, 3
  %798 = call float @dx.op.dot4.f32(i32 56, float %789, float %790, float %791, float %792, float %794, float %795, float %796, float %797)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %799 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %800 = extractvalue %dx.types.CBufRet.f32 %799, 1
  %801 = fmul fast float %800, %664
  %802 = fmul fast float %800, %665
  %803 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 138)  ; CBufferLoadLegacy(handle,regIndex)
  %804 = extractvalue %dx.types.CBufRet.f32 %803, 0
  %805 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %35)  ; CreateHandleForLib(Resource)
  %806 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %13)  ; CreateHandleForLib(Resource)
  %807 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %805, %dx.types.Handle %806, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %808 = extractvalue %dx.types.ResRet.f32 %807, 1
  %809 = extractvalue %dx.types.ResRet.f32 %807, 2
  %810 = extractvalue %dx.types.CBufRet.f32 %799, 2
  %811 = extractvalue %dx.types.CBufRet.f32 %799, 3
  %812 = fsub fast float %810, %811
  %813 = fmul fast float %812, %809
  %814 = fadd fast float %813, %811
  %815 = call float @dx.op.unary.f32(i32 7, float %814)  ; Saturate(value)
  %816 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %34)  ; CreateHandleForLib(Resource)
  %817 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %12)  ; CreateHandleForLib(Resource)
  %818 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %816, %dx.types.Handle %817, float %670, float %671, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %819 = extractvalue %dx.types.ResRet.f32 %818, 0
  %820 = extractvalue %dx.types.ResRet.f32 %818, 1
  %821 = extractvalue %dx.types.ResRet.f32 %818, 2
  %822 = extractvalue %dx.types.ResRet.f32 %818, 3
  %823 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %824 = extractvalue %dx.types.CBufRet.f32 %823, 0
  %825 = extractvalue %dx.types.CBufRet.f32 %823, 1
  %826 = extractvalue %dx.types.CBufRet.f32 %823, 2
  %827 = extractvalue %dx.types.CBufRet.f32 %823, 3
  %828 = call float @dx.op.dot4.f32(i32 56, float %819, float %820, float %821, float %822, float %824, float %825, float %826, float %827)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %829 = fmul fast float %828, 2.000000e+00
  %830 = fadd fast float %815, -1.000000e+00
  %831 = fadd fast float %830, %829
  %832 = call float @dx.op.binary.f32(i32 35, float %831, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %833 = call float @dx.op.binary.f32(i32 36, float %832, float 1.000000e+00)  ; FMin(a,b)
  %834 = fadd fast float %833, %798
  %835 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %33)  ; CreateHandleForLib(Resource)
  %836 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %11)  ; CreateHandleForLib(Resource)
  %837 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %835, %dx.types.Handle %836, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %838 = extractvalue %dx.types.ResRet.f32 %837, 1
  %839 = extractvalue %dx.types.ResRet.f32 %837, 2
  %840 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %841 = extractvalue %dx.types.CBufRet.f32 %840, 1
  %842 = extractvalue %dx.types.CBufRet.f32 %840, 2
  %843 = fsub fast float %841, %842
  %844 = fmul fast float %843, %839
  %845 = fadd fast float %844, %842
  %846 = call float @dx.op.unary.f32(i32 7, float %845)  ; Saturate(value)
  %847 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %848 = extractvalue %dx.types.CBufRet.f32 %847, 0
  %849 = extractvalue %dx.types.CBufRet.f32 %847, 1
  %850 = extractvalue %dx.types.CBufRet.f32 %847, 2
  %851 = extractvalue %dx.types.CBufRet.f32 %847, 3
  %852 = call float @dx.op.dot4.f32(i32 56, float %789, float %790, float %791, float %792, float %848, float %849, float %850, float %851)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %853 = fmul fast float %852, 2.000000e+00
  %854 = fadd fast float %846, -1.000000e+00
  %855 = fadd fast float %854, %853
  %856 = call float @dx.op.binary.f32(i32 35, float %855, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %857 = call float @dx.op.binary.f32(i32 36, float %856, float 1.000000e+00)  ; FMin(a,b)
  %858 = fadd fast float %834, %857
  %859 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %32)  ; CreateHandleForLib(Resource)
  %860 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %10)  ; CreateHandleForLib(Resource)
  %861 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %859, %dx.types.Handle %860, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %862 = extractvalue %dx.types.ResRet.f32 %861, 1
  %863 = extractvalue %dx.types.ResRet.f32 %861, 2
  %864 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %865 = extractvalue %dx.types.CBufRet.f32 %864, 1
  %866 = extractvalue %dx.types.CBufRet.f32 %864, 2
  %867 = fsub fast float %865, %866
  %868 = fmul fast float %867, %863
  %869 = fadd fast float %868, %866
  %870 = call float @dx.op.unary.f32(i32 7, float %869)  ; Saturate(value)
  %871 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %872 = extractvalue %dx.types.CBufRet.f32 %871, 0
  %873 = extractvalue %dx.types.CBufRet.f32 %871, 1
  %874 = extractvalue %dx.types.CBufRet.f32 %871, 2
  %875 = extractvalue %dx.types.CBufRet.f32 %871, 3
  %876 = call float @dx.op.dot4.f32(i32 56, float %789, float %790, float %791, float %792, float %872, float %873, float %874, float %875)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %877 = fmul fast float %876, 2.000000e+00
  %878 = fadd fast float %870, -1.000000e+00
  %879 = fadd fast float %878, %877
  %880 = call float @dx.op.binary.f32(i32 35, float %879, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %881 = call float @dx.op.binary.f32(i32 36, float %880, float 1.000000e+00)  ; FMin(a,b)
  %882 = fadd fast float %858, %881
  %883 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %31)  ; CreateHandleForLib(Resource)
  %884 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %9)  ; CreateHandleForLib(Resource)
  %885 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %883, %dx.types.Handle %884, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %886 = extractvalue %dx.types.ResRet.f32 %885, 1
  %887 = extractvalue %dx.types.ResRet.f32 %885, 2
  %888 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %889 = extractvalue %dx.types.CBufRet.f32 %888, 1
  %890 = extractvalue %dx.types.CBufRet.f32 %888, 2
  %891 = fsub fast float %889, %890
  %892 = fmul fast float %891, %887
  %893 = fadd fast float %892, %890
  %894 = call float @dx.op.unary.f32(i32 7, float %893)  ; Saturate(value)
  %895 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %896 = extractvalue %dx.types.CBufRet.f32 %895, 0
  %897 = extractvalue %dx.types.CBufRet.f32 %895, 1
  %898 = extractvalue %dx.types.CBufRet.f32 %895, 2
  %899 = extractvalue %dx.types.CBufRet.f32 %895, 3
  %900 = call float @dx.op.dot4.f32(i32 56, float %789, float %790, float %791, float %792, float %896, float %897, float %898, float %899)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %901 = fmul fast float %900, 2.000000e+00
  %902 = fadd fast float %894, -1.000000e+00
  %903 = fadd fast float %902, %901
  %904 = call float @dx.op.binary.f32(i32 35, float %903, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %905 = call float @dx.op.binary.f32(i32 36, float %904, float 1.000000e+00)  ; FMin(a,b)
  %906 = fadd fast float %882, %905
  %907 = fdiv fast float 1.000000e+00, %906
  %908 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %30)  ; CreateHandleForLib(Resource)
  %909 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %18)  ; CreateHandleForLib(Resource)
  %910 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %908, %dx.types.Handle %909, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %911 = extractvalue %dx.types.ResRet.f32 %910, 0
  %912 = extractvalue %dx.types.ResRet.f32 %910, 1
  %913 = fmul fast float %911, 2.000000e+00
  %914 = fmul fast float %912, 2.000000e+00
  %915 = fadd fast float %913, -1.000000e+00
  %916 = fadd fast float %914, -1.000000e+00
  %917 = call float @dx.op.dot2.f32(i32 54, float %915, float %916, float %915, float %916)  ; Dot2(ax,ay,bx,by)
  %918 = fsub fast float 1.000000e+00, %917
  %919 = call float @dx.op.unary.f32(i32 7, float %918)  ; Saturate(value)
  %920 = call float @dx.op.unary.f32(i32 24, float %919)  ; Sqrt(value)
  %921 = fmul fast float %907, %798
  %922 = fmul fast float %915, %921
  %923 = fmul fast float %916, %921
  %924 = fmul fast float %920, %921
  %925 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %29)  ; CreateHandleForLib(Resource)
  %926 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %8)  ; CreateHandleForLib(Resource)
  %927 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %925, %dx.types.Handle %926, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %928 = extractvalue %dx.types.ResRet.f32 %927, 0
  %929 = extractvalue %dx.types.ResRet.f32 %927, 1
  %930 = fmul fast float %928, 2.000000e+00
  %931 = fmul fast float %929, 2.000000e+00
  %932 = fadd fast float %930, -1.000000e+00
  %933 = fadd fast float %931, -1.000000e+00
  %934 = call float @dx.op.dot2.f32(i32 54, float %932, float %933, float %932, float %933)  ; Dot2(ax,ay,bx,by)
  %935 = fsub fast float 1.000000e+00, %934
  %936 = call float @dx.op.unary.f32(i32 7, float %935)  ; Saturate(value)
  %937 = call float @dx.op.unary.f32(i32 24, float %936)  ; Sqrt(value)
  %938 = fmul fast float %907, %833
  %939 = fmul fast float %932, %938
  %940 = fmul fast float %933, %938
  %941 = fmul fast float %937, %938
  %942 = fadd fast float %939, %922
  %943 = fadd fast float %940, %923
  %944 = fadd fast float %941, %924
  %945 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %28)  ; CreateHandleForLib(Resource)
  %946 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %7)  ; CreateHandleForLib(Resource)
  %947 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %945, %dx.types.Handle %946, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %948 = extractvalue %dx.types.ResRet.f32 %947, 0
  %949 = extractvalue %dx.types.ResRet.f32 %947, 1
  %950 = fmul fast float %948, 2.000000e+00
  %951 = fmul fast float %949, 2.000000e+00
  %952 = fadd fast float %950, -1.000000e+00
  %953 = fadd fast float %951, -1.000000e+00
  %954 = call float @dx.op.dot2.f32(i32 54, float %952, float %953, float %952, float %953)  ; Dot2(ax,ay,bx,by)
  %955 = fsub fast float 1.000000e+00, %954
  %956 = call float @dx.op.unary.f32(i32 7, float %955)  ; Saturate(value)
  %957 = call float @dx.op.unary.f32(i32 24, float %956)  ; Sqrt(value)
  %958 = fmul fast float %907, %857
  %959 = fmul fast float %952, %958
  %960 = fmul fast float %953, %958
  %961 = fmul fast float %957, %958
  %962 = fadd fast float %942, %959
  %963 = fadd fast float %943, %960
  %964 = fadd fast float %944, %961
  %965 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %27)  ; CreateHandleForLib(Resource)
  %966 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %6)  ; CreateHandleForLib(Resource)
  %967 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %965, %dx.types.Handle %966, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %968 = extractvalue %dx.types.ResRet.f32 %967, 0
  %969 = extractvalue %dx.types.ResRet.f32 %967, 1
  %970 = fmul fast float %968, 2.000000e+00
  %971 = fmul fast float %969, 2.000000e+00
  %972 = fadd fast float %970, -1.000000e+00
  %973 = fadd fast float %971, -1.000000e+00
  %974 = call float @dx.op.dot2.f32(i32 54, float %972, float %973, float %972, float %973)  ; Dot2(ax,ay,bx,by)
  %975 = fsub fast float 1.000000e+00, %974
  %976 = call float @dx.op.unary.f32(i32 7, float %975)  ; Saturate(value)
  %977 = call float @dx.op.unary.f32(i32 24, float %976)  ; Sqrt(value)
  %978 = fmul fast float %907, %881
  %979 = fmul fast float %972, %978
  %980 = fmul fast float %973, %978
  %981 = fmul fast float %977, %978
  %982 = fadd fast float %962, %979
  %983 = fadd fast float %963, %980
  %984 = fadd fast float %964, %981
  %985 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %26)  ; CreateHandleForLib(Resource)
  %986 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %5)  ; CreateHandleForLib(Resource)
  %987 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %985, %dx.types.Handle %986, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %988 = extractvalue %dx.types.ResRet.f32 %987, 0
  %989 = extractvalue %dx.types.ResRet.f32 %987, 1
  %990 = fmul fast float %988, 2.000000e+00
  %991 = fmul fast float %989, 2.000000e+00
  %992 = fadd fast float %990, -1.000000e+00
  %993 = fadd fast float %991, -1.000000e+00
  %994 = call float @dx.op.dot2.f32(i32 54, float %992, float %993, float %992, float %993)  ; Dot2(ax,ay,bx,by)
  %995 = fsub fast float 1.000000e+00, %994
  %996 = call float @dx.op.unary.f32(i32 7, float %995)  ; Saturate(value)
  %997 = call float @dx.op.unary.f32(i32 24, float %996)  ; Sqrt(value)
  %998 = fmul fast float %907, %905
  %999 = fmul fast float %992, %998
  %1000 = fmul fast float %993, %998
  %1001 = fmul fast float %997, %998
  %1002 = fadd fast float %982, %999
  %1003 = fadd fast float %983, %1000
  %1004 = fadd fast float %984, %1001
  %1005 = fmul fast float %1002, %681
  %1006 = fmul fast float %1003, %681
  %1007 = fmul fast float %1004, %681
  %1008 = fadd fast float %1005, %74
  %1009 = fadd fast float %1006, %680
  %1010 = fadd fast float %1007, %75
  %1011 = call float @dx.op.dot3.f32(i32 55, float %1008, float %1009, float %1010, float %1008, float %1009, float %1010)  ; Dot3(ax,ay,az,bx,by,bz)
  %1012 = call float @dx.op.unary.f32(i32 25, float %1011)  ; Rsqrt(value)
  %1013 = fmul fast float %1008, %1012
  %1014 = fmul fast float %1009, %1012
  %1015 = fmul fast float %1010, %1012
  %1016 = fmul fast float %1013, %760
  %1017 = call float @dx.op.tertiary.f32(i32 46, float %1014, float %767, float %1016)  ; FMad(a,b,c)
  %1018 = call float @dx.op.tertiary.f32(i32 46, float %1015, float %776, float %1017)  ; FMad(a,b,c)
  %1019 = fmul fast float %1013, %762
  %1020 = call float @dx.op.tertiary.f32(i32 46, float %1014, float %770, float %1019)  ; FMad(a,b,c)
  %1021 = call float @dx.op.tertiary.f32(i32 46, float %1015, float %779, float %1020)  ; FMad(a,b,c)
  %1022 = fmul fast float %1013, %764
  %1023 = call float @dx.op.tertiary.f32(i32 46, float %1014, float %773, float %1022)  ; FMad(a,b,c)
  %1024 = call float @dx.op.tertiary.f32(i32 46, float %1015, float %782, float %1023)  ; FMad(a,b,c)
  %1025 = call float @dx.op.dot3.f32(i32 55, float %1018, float %1021, float %1024, float %1018, float %1021, float %1024)  ; Dot3(ax,ay,az,bx,by,bz)
  %1026 = call float @dx.op.unary.f32(i32 25, float %1025)  ; Rsqrt(value)
  %1027 = fmul fast float %1018, %785
  %1028 = fmul fast float %1027, %1026
  %1029 = fmul fast float %1021, %785
  %1030 = fmul fast float %1029, %1026
  %1031 = fmul fast float %1024, %785
  %1032 = fmul fast float %1031, %1026
  %1033 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %58, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %1034 = extractvalue %dx.types.CBufRet.f32 %1033, 0
  %1035 = extractvalue %dx.types.CBufRet.f32 %1033, 1
  %1036 = extractvalue %dx.types.CBufRet.f32 %1033, 2
  %1037 = extractvalue %dx.types.CBufRet.f32 %1033, 3
  %1038 = fmul fast float %1035, %1034
  %1039 = fmul fast float %1036, %1034
  %1040 = fmul fast float %1037, %1034
  %1041 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %25)  ; CreateHandleForLib(Resource)
  %1042 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1041, %dx.types.Handle %909, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1043 = extractvalue %dx.types.ResRet.f32 %1042, 0
  %1044 = extractvalue %dx.types.ResRet.f32 %1042, 1
  %1045 = extractvalue %dx.types.ResRet.f32 %1042, 2
  %1046 = fmul fast float %1043, %921
  %1047 = fmul fast float %1044, %921
  %1048 = fmul fast float %1045, %921
  %1049 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %24)  ; CreateHandleForLib(Resource)
  %1050 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %4)  ; CreateHandleForLib(Resource)
  %1051 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1049, %dx.types.Handle %1050, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1052 = extractvalue %dx.types.ResRet.f32 %1051, 0
  %1053 = extractvalue %dx.types.ResRet.f32 %1051, 1
  %1054 = extractvalue %dx.types.ResRet.f32 %1051, 2
  %1055 = fmul fast float %1052, %938
  %1056 = fmul fast float %1053, %938
  %1057 = fmul fast float %1054, %938
  %1058 = fadd fast float %1055, %1046
  %1059 = fadd fast float %1056, %1047
  %1060 = fadd fast float %1057, %1048
  %1061 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %23)  ; CreateHandleForLib(Resource)
  %1062 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %3)  ; CreateHandleForLib(Resource)
  %1063 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1061, %dx.types.Handle %1062, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1064 = extractvalue %dx.types.ResRet.f32 %1063, 0
  %1065 = extractvalue %dx.types.ResRet.f32 %1063, 1
  %1066 = extractvalue %dx.types.ResRet.f32 %1063, 2
  %1067 = fmul fast float %1064, %958
  %1068 = fmul fast float %1065, %958
  %1069 = fmul fast float %1066, %958
  %1070 = fadd fast float %1058, %1067
  %1071 = fadd fast float %1059, %1068
  %1072 = fadd fast float %1060, %1069
  %1073 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %22)  ; CreateHandleForLib(Resource)
  %1074 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %2)  ; CreateHandleForLib(Resource)
  %1075 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1073, %dx.types.Handle %1074, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1076 = extractvalue %dx.types.ResRet.f32 %1075, 0
  %1077 = extractvalue %dx.types.ResRet.f32 %1075, 1
  %1078 = extractvalue %dx.types.ResRet.f32 %1075, 2
  %1079 = fmul fast float %1076, %978
  %1080 = fmul fast float %1077, %978
  %1081 = fmul fast float %1078, %978
  %1082 = fadd fast float %1070, %1079
  %1083 = fadd fast float %1071, %1080
  %1084 = fadd fast float %1072, %1081
  %1085 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %21)  ; CreateHandleForLib(Resource)
  %1086 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %1)  ; CreateHandleForLib(Resource)
  %1087 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1085, %dx.types.Handle %1086, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float %804)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1088 = extractvalue %dx.types.ResRet.f32 %1087, 0
  %1089 = extractvalue %dx.types.ResRet.f32 %1087, 1
  %1090 = extractvalue %dx.types.ResRet.f32 %1087, 2
  %1091 = fmul fast float %1088, %998
  %1092 = fmul fast float %1089, %998
  %1093 = fmul fast float %1090, %998
  %1094 = fadd fast float %1082, %1091
  %1095 = fadd fast float %1083, %1092
  %1096 = fadd fast float %1084, %1093
  %1097 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %20)  ; CreateHandleForLib(Resource)
  %1098 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1097, %dx.types.Handle %909, float %801, float %802, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1099 = extractvalue %dx.types.ResRet.f32 %1098, 1
  %1100 = fmul fast float %1099, %921
  %1101 = fmul fast float %938, %808
  %1102 = fmul fast float %958, %838
  %1103 = fmul fast float %978, %862
  %1104 = fmul fast float %998, %886
  %1105 = fadd fast float %1102, %1101
  %1106 = fadd fast float %1105, %1103
  %1107 = fadd fast float %1106, %1104
  %1108 = fadd fast float %1107, %1100
  %1109 = mul nuw nsw i32 %207, 40
  %1110 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %1109, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1111 = extractvalue %dx.types.ResRet.f32 %1110, 0
  %1112 = bitcast float %1111 to i32
  %1113 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1114 = zext i1 %784 to i32
  %1115 = call float @dx.op.unary.f32(i32 7, float %1094)  ; Saturate(value)
  %1116 = call float @dx.op.unary.f32(i32 7, float %1095)  ; Saturate(value)
  %1117 = call float @dx.op.unary.f32(i32 7, float %1096)  ; Saturate(value)
  %1118 = call float @dx.op.unary.f32(i32 7, float %1108)  ; Saturate(value)
  %1119 = fmul fast float %1118, %682
  %1120 = fadd fast float %1119, %77
  %1121 = and i32 %1112, 64
  %1122 = icmp ne i32 %1121, 0
  %1123 = select i1 %1122, float -1.000000e+00, float 1.000000e+00
  %1124 = fmul fast float %1123, %785
  %1125 = fmul fast float %720, %1124
  %1126 = fmul fast float %721, %1124
  %1127 = fmul fast float %722, %1124
  %1128 = call float @dx.op.dot3.f32(i32 55, float %776, float %779, float %782, float %776, float %779, float %782)  ; Dot3(ax,ay,az,bx,by,bz)
  %1129 = call float @dx.op.unary.f32(i32 25, float %1128)  ; Rsqrt(value)
  %1130 = fmul fast float %785, %776
  %1131 = fmul fast float %1130, %1129
  %1132 = fmul fast float %785, %779
  %1133 = fmul fast float %1132, %1129
  %1134 = fmul fast float %785, %782
  %1135 = fmul fast float %1134, %1129
  %1136 = call float @dx.op.binary.f32(i32 35, float %1038, float 0.000000e+00)  ; FMax(a,b)
  %1137 = call float @dx.op.binary.f32(i32 35, float %1039, float 0.000000e+00)  ; FMax(a,b)
  %1138 = call float @dx.op.binary.f32(i32 35, float %1040, float 0.000000e+00)  ; FMax(a,b)
  %1139 = call i32 @dx.op.legacyF32ToF16(i32 130, float %684)  ; LegacyF32ToF16(value)
  %1140 = call i32 @dx.op.legacyF32ToF16(i32 130, float %82)  ; LegacyF32ToF16(value)
  %1141 = shl i32 %1140, 16
  %1142 = or i32 %1141, %1139
  %1143 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1136)  ; LegacyF32ToF16(value)
  %1144 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1137)  ; LegacyF32ToF16(value)
  %1145 = shl i32 %1144, 16
  %1146 = or i32 %1145, %1143
  %1147 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1138)  ; LegacyF32ToF16(value)
  %1148 = call float @dx.op.unary.f32(i32 6, float %1028)  ; FAbs(value)
  %1149 = call float @dx.op.unary.f32(i32 6, float %1030)  ; FAbs(value)
  %1150 = call float @dx.op.unary.f32(i32 6, float %1032)  ; FAbs(value)
  %1151 = call float @dx.op.dot3.f32(i32 55, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %1148, float %1149, float %1150)  ; Dot3(ax,ay,az,bx,by,bz)
  %1152 = fdiv fast float %1028, %1151
  %1153 = fdiv fast float %1030, %1151
  %1154 = fcmp fast ugt float %1032, 0.000000e+00
  br i1 %1154, label %1166, label %1155

; <label>:1155                                    ; preds = %679
  %1156 = call float @dx.op.unary.f32(i32 6, float %1153)  ; FAbs(value)
  %1157 = call float @dx.op.unary.f32(i32 6, float %1152)  ; FAbs(value)
  %1158 = fsub fast float 1.000000e+00, %1156
  %1159 = fsub fast float 1.000000e+00, %1157
  %1160 = fcmp fast oge float %1152, 0.000000e+00
  %1161 = fcmp fast oge float %1153, 0.000000e+00
  %1162 = select i1 %1160, float 1.000000e+00, float -1.000000e+00
  %1163 = select i1 %1161, float 1.000000e+00, float -1.000000e+00
  %1164 = fmul fast float %1158, %1162
  %1165 = fmul fast float %1159, %1163
  br label %1166

; <label>:1166                                    ; preds = %1155, %679
  %1167 = phi float [ %1164, %1155 ], [ %1152, %679 ]
  %1168 = phi float [ %1165, %1155 ], [ %1153, %679 ]
  %1169 = fmul fast float %1167, 2.047000e+03
  %1170 = fmul fast float %1168, 2.047000e+03
  %1171 = fadd fast float %1169, 2.047000e+03
  %1172 = fadd fast float %1170, 2.047000e+03
  %1173 = call float @dx.op.unary.f32(i32 26, float %1171)  ; Round_ne(value)
  %1174 = call float @dx.op.unary.f32(i32 26, float %1172)  ; Round_ne(value)
  %1175 = fptosi float %1173 to i32
  %1176 = fptosi float %1174 to i32
  %1177 = shl i32 %1176, 12
  %1178 = add i32 %1177, %1175
  %1179 = call float @dx.op.unary.f32(i32 6, float %1125)  ; FAbs(value)
  %1180 = call float @dx.op.unary.f32(i32 6, float %1126)  ; FAbs(value)
  %1181 = call float @dx.op.unary.f32(i32 6, float %1127)  ; FAbs(value)
  %1182 = call float @dx.op.dot3.f32(i32 55, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %1179, float %1180, float %1181)  ; Dot3(ax,ay,az,bx,by,bz)
  %1183 = fdiv fast float %1125, %1182
  %1184 = fdiv fast float %1126, %1182
  %1185 = fcmp fast ugt float %1127, 0.000000e+00
  br i1 %1185, label %1197, label %1186

; <label>:1186                                    ; preds = %1166
  %1187 = call float @dx.op.unary.f32(i32 6, float %1184)  ; FAbs(value)
  %1188 = call float @dx.op.unary.f32(i32 6, float %1183)  ; FAbs(value)
  %1189 = fsub fast float 1.000000e+00, %1187
  %1190 = fsub fast float 1.000000e+00, %1188
  %1191 = fcmp fast oge float %1183, 0.000000e+00
  %1192 = fcmp fast oge float %1184, 0.000000e+00
  %1193 = select i1 %1191, float 1.000000e+00, float -1.000000e+00
  %1194 = select i1 %1192, float 1.000000e+00, float -1.000000e+00
  %1195 = fmul fast float %1189, %1193
  %1196 = fmul fast float %1190, %1194
  br label %1197

; <label>:1197                                    ; preds = %1186, %1166
  %1198 = phi float [ %1195, %1186 ], [ %1183, %1166 ]
  %1199 = phi float [ %1196, %1186 ], [ %1184, %1166 ]
  %1200 = fmul fast float %1198, 2.047000e+03
  %1201 = fmul fast float %1199, 2.047000e+03
  %1202 = fadd fast float %1200, 2.047000e+03
  %1203 = fadd fast float %1201, 2.047000e+03
  %1204 = call float @dx.op.unary.f32(i32 26, float %1202)  ; Round_ne(value)
  %1205 = call float @dx.op.unary.f32(i32 26, float %1203)  ; Round_ne(value)
  %1206 = fptosi float %1204 to i32
  %1207 = fptosi float %1205 to i32
  %1208 = shl i32 %1207, 12
  %1209 = add i32 %1208, %1206
  %1210 = shl i32 %1178, 16
  %1211 = or i32 %1210, %1147
  %1212 = lshr i32 %1178, 16
  %1213 = shl i32 %1209, 8
  %1214 = or i32 %1213, %1212
  %1215 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1115)  ; LegacyF32ToF16(value)
  %1216 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1116)  ; LegacyF32ToF16(value)
  %1217 = shl i32 %1216, 16
  %1218 = or i32 %1217, %1215
  %1219 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1117)  ; LegacyF32ToF16(value)
  %1220 = call i32 @dx.op.legacyF32ToF16(i32 130, float 1.000000e+00)  ; LegacyF32ToF16(value)
  %1221 = shl i32 %1220, 16
  %1222 = or i32 %1221, %1219
  %1223 = call i32 @dx.op.legacyF32ToF16(i32 130, float 0.000000e+00)  ; LegacyF32ToF16(value)
  %1224 = call i32 @dx.op.legacyF32ToF16(i32 130, float 5.000000e-01)  ; LegacyF32ToF16(value)
  %1225 = shl i32 %1224, 16
  %1226 = or i32 %1225, %1223
  %1227 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1120)  ; LegacyF32ToF16(value)
  %1228 = shl i32 %1223, 16
  %1229 = or i32 %1228, %1227
  %1230 = shl nuw nsw i32 %1114, 23
  %1231 = shl i32 %1112, 19
  %1232 = and i32 %1231, -536870912
  %1233 = or i32 %1230, %1232
  %1234 = or i32 %1233, %1220
  %1235 = or i32 %1234, 65536
  %1236 = call float @dx.op.unary.f32(i32 6, float %1131)  ; FAbs(value)
  %1237 = call float @dx.op.unary.f32(i32 6, float %1133)  ; FAbs(value)
  %1238 = call float @dx.op.unary.f32(i32 6, float %1135)  ; FAbs(value)
  %1239 = call float @dx.op.dot3.f32(i32 55, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %1236, float %1237, float %1238)  ; Dot3(ax,ay,az,bx,by,bz)
  %1240 = fdiv fast float %1131, %1239
  %1241 = fdiv fast float %1133, %1239
  %1242 = fcmp fast ugt float %1135, 0.000000e+00
  br i1 %1242, label %1254, label %1243

; <label>:1243                                    ; preds = %1197
  %1244 = call float @dx.op.unary.f32(i32 6, float %1241)  ; FAbs(value)
  %1245 = call float @dx.op.unary.f32(i32 6, float %1240)  ; FAbs(value)
  %1246 = fsub fast float 1.000000e+00, %1244
  %1247 = fsub fast float 1.000000e+00, %1245
  %1248 = fcmp fast oge float %1240, 0.000000e+00
  %1249 = fcmp fast oge float %1241, 0.000000e+00
  %1250 = select i1 %1248, float 1.000000e+00, float -1.000000e+00
  %1251 = select i1 %1249, float 1.000000e+00, float -1.000000e+00
  %1252 = fmul fast float %1246, %1250
  %1253 = fmul fast float %1247, %1251
  br label %1254

; <label>:1254                                    ; preds = %1243, %1197
  %1255 = phi float [ %1252, %1243 ], [ %1240, %1197 ]
  %1256 = phi float [ %1253, %1243 ], [ %1241, %1197 ]
  %1257 = fmul fast float %1255, 2.047000e+03
  %1258 = fmul fast float %1256, 2.047000e+03
  %1259 = fadd fast float %1257, 2.047000e+03
  %1260 = fadd fast float %1258, 2.047000e+03
  %1261 = call float @dx.op.unary.f32(i32 26, float %1259)  ; Round_ne(value)
  %1262 = call float @dx.op.unary.f32(i32 26, float %1260)  ; Round_ne(value)
  %1263 = fptosi float %1261 to i32
  %1264 = fptosi float %1262 to i32
  %1265 = shl i32 %1264, 12
  %1266 = add i32 %1265, %1263
  %1267 = call float @dx.op.unary.f32(i32 6, float 0x7FF8000000000000)  ; FAbs(value)
  %1268 = fsub fast float 1.000000e+00, %1267
  %1269 = fmul fast float %1268, 2.047000e+03
  %1270 = fsub fast float 2.047000e+03, %1269
  %1271 = call float @dx.op.unary.f32(i32 26, float %1270)  ; Round_ne(value)
  %1272 = fptosi float %1271 to i32
  %1273 = mul i32 %1272, 4097
  %1274 = mul i32 %1272, 1048832
  %1275 = and i32 %1274, -16777216
  %1276 = or i32 %1275, %1266
  %1277 = and i32 %1273, 65535
  %1278 = or i32 %1277, %1228
  %1279 = or i32 %1228, %1223
  %1280 = or i32 %1221, %1220
  %1281 = or i32 %1228, %1220
  store float %1113, float* %64, align 4
  store i32 %1142, i32* %78, align 4
  %1282 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2
  store i32 0, i32* %1282, align 4
  %1283 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 0
  store i32 %1146, i32* %1283, align 4
  %1284 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 1
  store i32 %1211, i32* %1284, align 4
  %1285 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 2
  store i32 %1214, i32* %1285, align 4
  %1286 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 3
  store i32 %1218, i32* %1286, align 4
  %1287 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 4
  store i32 %1222, i32* %1287, align 4
  %1288 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 5
  store i32 %1226, i32* %1288, align 4
  %1289 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 6
  store i32 %1229, i32* %1289, align 4
  %1290 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 7
  store i32 %1235, i32* %1290, align 4
  %1291 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 8
  store i32 %1276, i32* %1291, align 4
  %1292 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 9
  store i32 %1278, i32* %1292, align 4
  %1293 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 10
  store i32 %1279, i32* %1293, align 4
  %1294 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 11
  store i32 %1280, i32* %1294, align 4
  %1295 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 3, i32 12
  store i32 %1281, i32* %1295, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.hitKind.i32(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.View(i32, %View) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.LandscapeMVF(i32, %LandscapeMVF) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.LandscapeContinuousLODParameters(i32, %LandscapeContinuousLODParameters) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.LandscapeParameters(i32, %LandscapeParameters) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.Material(i32, %Material) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.HitGroupSystemRootConstants(i32, %HitGroupSystemRootConstants) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32, %struct.SamplerState) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32, %"class.Texture2D<vector<float, 4> >") #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.ByteAddressBuffer(i32, %struct.ByteAddressBuffer) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Buffer<float>"(i32, %"class.Buffer<float>") #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.StructuredBuffer<vector<float, 4> >"(i32, %"class.StructuredBuffer<vector<float, 4> >") #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Buffer<unsigned int>"(i32, %"class.Buffer<unsigned int>") #2

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!61, !64}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 6}
!3 = !{!"lib", i32 6, i32 3}
!4 = !{!5, null, !35, !42}
!5 = !{!6, !8, !9, !11, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34}
!6 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", !"View_PrimitiveSceneData", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 16}
!8 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", !"View_InstanceSceneData", i32 0, i32 1, i32 1, i32 12, i32 0, !7}
!9 = !{i32 2, %"class.Buffer<unsigned int>"* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", !"View_LandscapeIndirection", i32 0, i32 2, i32 1, i32 10, i32 0, !10}
!10 = !{i32 0, i32 5}
!11 = !{i32 3, %"class.Buffer<float>"* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", !"View_LandscapePerComponentData", i32 0, i32 3, i32 1, i32 10, i32 0, !12}
!12 = !{i32 0, i32 9}
!13 = !{i32 4, %"class.Buffer<float>"* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", !"LandscapeContinuousLODParameters_SectionLODBias", i32 0, i32 4, i32 1, i32 10, i32 0, !12}
!14 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", !"LandscapeParameters_HeightmapTexture", i32 0, i32 5, i32 1, i32 2, i32 0, !12}
!15 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", !"LandscapeParameters_NormalmapTexture", i32 0, i32 6, i32 1, i32 2, i32 0, !12}
!16 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", !"LandscapeParameters_XYOffsetmapTexture", i32 0, i32 7, i32 1, i32 2, i32 0, !12}
!17 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_0", i32 0, i32 8, i32 1, i32 2, i32 0, !12}
!18 = !{i32 9, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_1", i32 0, i32 9, i32 1, i32 2, i32 0, !12}
!19 = !{i32 10, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_2", i32 0, i32 10, i32 1, i32 2, i32 0, !12}
!20 = !{i32 11, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_3", i32 0, i32 11, i32 1, i32 2, i32 0, !12}
!21 = !{i32 12, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_4", i32 0, i32 12, i32 1, i32 2, i32 0, !12}
!22 = !{i32 13, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_5", i32 0, i32 13, i32 1, i32 2, i32 0, !12}
!23 = !{i32 14, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_6", i32 0, i32 14, i32 1, i32 2, i32 0, !12}
!24 = !{i32 15, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_7", i32 0, i32 15, i32 1, i32 2, i32 0, !12}
!25 = !{i32 16, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_8", i32 0, i32 16, i32 1, i32 2, i32 0, !12}
!26 = !{i32 17, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_9", i32 0, i32 17, i32 1, i32 2, i32 0, !12}
!27 = !{i32 18, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_10", i32 0, i32 18, i32 1, i32 2, i32 0, !12}
!28 = !{i32 19, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_11", i32 0, i32 19, i32 1, i32 2, i32 0, !12}
!29 = !{i32 20, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_12", i32 0, i32 20, i32 1, i32 2, i32 0, !12}
!30 = !{i32 21, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_13", i32 0, i32 21, i32 1, i32 2, i32 0, !12}
!31 = !{i32 22, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_14", i32 0, i32 22, i32 1, i32 2, i32 0, !12}
!32 = !{i32 23, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_15", i32 0, i32 23, i32 1, i32 2, i32 0, !12}
!33 = !{i32 24, %"class.Texture2D<vector<float, 4> >"* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A", !"Material_Texture2D_16", i32 0, i32 24, i32 1, i32 2, i32 0, !12}
!34 = !{i32 25, %struct.ByteAddressBuffer* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", !"HitGroupSystemIndexBuffer", i32 2, i32 0, i32 1, i32 11, i32 0, null}
!35 = !{!36, !37, !38, !39, !40, !41}
!36 = !{i32 0, %View* @View, !"View", i32 0, i32 0, i32 1, i32 4960, null}
!37 = !{i32 1, %LandscapeMVF* @LandscapeMVF, !"LandscapeMVF", i32 0, i32 1, i32 1, i32 8, null}
!38 = !{i32 2, %LandscapeContinuousLODParameters* @LandscapeContinuousLODParameters, !"LandscapeContinuousLODParameters", i32 0, i32 2, i32 1, i32 24, null}
!39 = !{i32 3, %LandscapeParameters* @LandscapeParameters, !"LandscapeParameters", i32 0, i32 3, i32 1, i32 208, null}
!40 = !{i32 4, %Material* @Material, !"Material", i32 0, i32 4, i32 1, i32 176, null}
!41 = !{i32 5, %HitGroupSystemRootConstants* @HitGroupSystemRootConstants, !"HitGroupSystemRootConstants", i32 2, i32 0, i32 1, i32 16, null}
!42 = !{!43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60}
!43 = !{i32 0, %struct.SamplerState* @"\01?View_MaterialTextureBilinearWrapedSampler@@3USamplerState@@A", !"View_MaterialTextureBilinearWrapedSampler", i32 0, i32 0, i32 1, i32 0, null}
!44 = !{i32 1, %struct.SamplerState* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", !"LandscapeParameters_HeightmapTextureSampler", i32 0, i32 1, i32 1, i32 0, null}
!45 = !{i32 2, %struct.SamplerState* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", !"LandscapeParameters_NormalmapTextureSampler", i32 0, i32 2, i32 1, i32 0, null}
!46 = !{i32 3, %struct.SamplerState* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A", !"LandscapeParameters_XYOffsetmapTextureSampler", i32 0, i32 3, i32 1, i32 0, null}
!47 = !{i32 4, %struct.SamplerState* @"\01?Material_Texture2D_0Sampler@@3USamplerState@@A", !"Material_Texture2D_0Sampler", i32 0, i32 4, i32 1, i32 0, null}
!48 = !{i32 5, %struct.SamplerState* @"\01?Material_Texture2D_1Sampler@@3USamplerState@@A", !"Material_Texture2D_1Sampler", i32 0, i32 5, i32 1, i32 0, null}
!49 = !{i32 6, %struct.SamplerState* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", !"Material_Texture2D_2Sampler", i32 0, i32 6, i32 1, i32 0, null}
!50 = !{i32 7, %struct.SamplerState* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", !"Material_Texture2D_3Sampler", i32 0, i32 7, i32 1, i32 0, null}
!51 = !{i32 8, %struct.SamplerState* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", !"Material_Texture2D_4Sampler", i32 0, i32 8, i32 1, i32 0, null}
!52 = !{i32 9, %struct.SamplerState* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", !"Material_Texture2D_5Sampler", i32 0, i32 9, i32 1, i32 0, null}
!53 = !{i32 10, %struct.SamplerState* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", !"Material_Texture2D_7Sampler", i32 0, i32 10, i32 1, i32 0, null}
!54 = !{i32 11, %struct.SamplerState* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", !"Material_Texture2D_8Sampler", i32 0, i32 11, i32 1, i32 0, null}
!55 = !{i32 12, %struct.SamplerState* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", !"Material_Texture2D_9Sampler", i32 0, i32 12, i32 1, i32 0, null}
!56 = !{i32 13, %struct.SamplerState* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", !"Material_Texture2D_10Sampler", i32 0, i32 13, i32 1, i32 0, null}
!57 = !{i32 14, %struct.SamplerState* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", !"Material_Texture2D_12Sampler", i32 0, i32 14, i32 1, i32 0, null}
!58 = !{i32 15, %struct.SamplerState* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A", !"Material_Texture2D_13Sampler", i32 0, i32 15, i32 1, i32 0, null}
!59 = !{i32 16, %struct.SamplerState* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A", !"Material_Texture2D_14Sampler", i32 0, i32 16, i32 1, i32 0, null}
!60 = !{i32 17, %struct.SamplerState* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A", !"Material_Texture2D_15Sampler", i32 0, i32 17, i32 1, i32 0, null}
!61 = !{null, !"", null, !4, !62}
!62 = !{i32 0, i64 8388624, i32 5, !63}
!63 = !{i32 0}
!64 = !{void (%struct.FPackedPathTracingPayload*, %struct.FDefaultAttributes*)* @"\01?PathTracingMaterialCHS@@YAXUFPackedPathTracingPayload@@UFDefaultAttributes@@@Z", !"\01?PathTracingMaterialCHS@@YAXUFPackedPathTracingPayload@@UFDefaultAttributes@@@Z", null, null, !65}
!65 = !{i32 8, i32 10, i32 6, i32 64, i32 7, i32 8, i32 5, !63}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %PixelMaterialInputs"}
!68 = distinct !{!68, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z"}
!69 = distinct !{!69, !70, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z: %PixelMaterialInputs"}
!70 = distinct !{!70, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z"}
!71 = !{!72, !67, !69}
!72 = distinct !{!72, !68, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %Parameters"}
!73 = !{!74, !76, !78}
!74 = distinct !{!74, !75, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!75 = distinct !{!75, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!76 = distinct !{!76, !77, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFDefaultAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %Interpolants"}
!77 = distinct !{!77, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFDefaultAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z"}
!78 = distinct !{!78, !77, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFDefaultAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %FaceNormal"}
!79 = !{!80, !67, !69}
!80 = distinct !{!80, !81, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z: %agg.result"}
!81 = distinct !{!81, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z"}
!82 = !{!83, !85, !76, !78}
!83 = distinct !{!83, !84, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z: %agg.result"}
!84 = distinct !{!84, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z"}
!85 = distinct !{!85, !86, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!86 = distinct !{!86, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!87 = !{!88, !90, !74, !76, !78}
!88 = distinct !{!88, !89, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z: %agg.result"}
!89 = distinct !{!89, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z"}
!90 = distinct !{!90, !91, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z: %agg.result"}
!91 = distinct !{!91, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z"}
!92 = !{!93, !93, i64 0}
!93 = !{!"float", !94, i64 0}
!94 = !{!"omnipotent char", !95, i64 0}
!95 = !{!"Simple C/C++ TBAA"}
!96 = !{!97, !97, i64 0}
!97 = !{!"int", !94, i64 0}
!98 = !{!99}
!99 = distinct !{!99, !100, !"\01?internal.GetRayCone@FPackedPathTracingPayload@@QAA?AUFRayCone@@XZ: %agg.result"}
!100 = distinct !{!100, !"\01?internal.GetRayCone@FPackedPathTracingPayload@@QAA?AUFRayCone@@XZ"}
!101 = !{!76, !78}
!102 = !{!85, !76, !78}
!103 = distinct !{!103, !"dx.controlflow.hints", i32 1}
